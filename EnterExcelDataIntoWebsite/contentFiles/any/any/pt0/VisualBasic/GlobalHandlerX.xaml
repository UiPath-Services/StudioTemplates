<Activity mc:Ignorable="sap sap2010" x:Class="GlobalHandlerX" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sx="clr-namespace:System.Xml;assembly=System.Xml" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uico="http://schemas.uipath.com/workflow/activities/contracts" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="errorInfo" Type="InArgument(uico:ExceptionHandlerArgs)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="result" Type="OutArgument(uico:ErrorAction)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>968,1329</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GlobalHandlerX</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Activities.Contracts</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Globalization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Activities.Contracts</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationX</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="This sequence steps in during execution when the project encounters an unmanaged error.&#xA;&#xA;Important: Arguments 'errorInfo' and 'result' should not be removed." DisplayName="GlobalHandlerX" sap:VirtualizedContainerService.HintSize="978,1264" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Default="RuntimeExecutionError_Template.html" Modifiers="ReadOnly" Name="TemplateFilePath" />
      <Variable x:TypeArguments="x:String" Name="ErrorTemplate" />
      <Variable x:TypeArguments="x:Boolean" Name="SkipIterationFlag" />
      <Variable x:TypeArguments="s:String[]" sap2010:Annotation.AnnotationText="List of workflow elements where to stop the error propagation. Should contain the repetitive elements, like ForEachSomething activities, but we need to stop the error propagation before reaching the repetitive element, to be able to continue with the next iteration. Last element before the repetitive is a System.Activities.Statements.Sequence, invisible in StudioX designer, but present in the xaml file. &#xA;Top most activity of any StudioX workflow is of type UiPath.Excel.Activities.Business.SequenceX and that one is added as well in the list to prevent the exception to propagate outside of the workflow.&#xA;&#xA;Basically, only the Sequence element should be enough in the list and the SequenceX is added as a fail-safe mechanism. " Default="[{&quot;System.Activities.Statements.Sequence&quot;, &quot;UiPath.Excel.Activities.Business.SequenceX&quot;}]" Modifiers="ReadOnly" Name="RepetitiveElements" />
      <Variable x:TypeArguments="sx:XmlNode" Name="ActivityNode" />
      <Variable x:TypeArguments="x:String" Default="RuntimeExecutionError.html" Name="CustomInputContentPath" />
      <Variable x:TypeArguments="x:String" Name="UserAction" />
      <Variable x:TypeArguments="x:String" Default="SkipIterationFlag=True" Name="SkipIterationFlagText" />
      <Variable x:TypeArguments="x:String" Name="ErrorTemplateBackup" />
      <Variable x:TypeArguments="x:String" Name="placeholderLocDefaultAction" />
      <Variable x:TypeArguments="x:String" Name="placeholderLocTheApplication" />
      <Variable x:TypeArguments="x:String" Name="cEmptyString">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">440,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <av:PointCollection x:Key="ConnectorLocation">470,77.5 470,124.5</av:PointCollection>
        <x:Double x:Key="Height">1171</x:Double>
        <x:Double x:Key="Width">944</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID12</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">370,124.5</av:Point>
          <av:Size x:Key="ShapeSize">200,51</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">470,175.5 470,225.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Error" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[errorInfo.Exception.ToString]" />
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">370,225.5</av:Point>
              <av:Size x:Key="ShapeSize">200,66</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">470,291.5 470,350</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Get template" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_51">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadTextFile Content="[ErrorTemplate]" DisplayName="Read Error Template" FileName="[TemplateFilePath]" sap:VirtualizedContainerService.HintSize="384,79" sap2010:WorkflowViewState.IdRef="ReadTextFile_6" />
            <Assign DisplayName="Assign ErrorTemplateBackup" sap:VirtualizedContainerService.HintSize="384,60" sap2010:WorkflowViewState.IdRef="Assign_59">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ErrorTemplateBackup]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ErrorTemplate]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">339,350</av:Point>
                  <av:Size x:Key="ShapeSize">262,60</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">470,410 470,439.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign Skip Iteration Flag" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[SkipIterationFlag]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">[ErrorTemplate.StartsWith(SkipIterationFlagText)]</InArgument>
                </Assign.Value>
              </Assign>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Are we in a Skip Iteration? Then Retrow the exception untill we reach the For Each activity. Else, do the normal exception handling." Condition="[SkipIterationFlag]" DisplayName="Skip Iteration? " sap:VirtualizedContainerService.HintSize="160,204" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">390,439.5</av:Point>
                      <av:Size x:Key="ShapeSize">160,204</av:Size>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <av:PointCollection x:Key="TrueConnector">390,541.5 280.5,541.5 280.5,656.5</av:PointCollection>
                      <x:String x:Key="TrueLabel">Yes</x:String>
                      <x:String x:Key="FalseLabel">No</x:String>
                      <av:PointCollection x:Key="FalseConnector">550,541.5 750,541.5 750,606.04</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowDecision x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Did we reached the For Each level?" Condition="[RepetitiveElements.Contains(errorInfo.ActivityInfo.TypeName)]" DisplayName="Repetitive structure top level?" sap:VirtualizedContainerService.HintSize="160,129" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">200.5,656.5</av:Point>
                          <av:Size x:Key="ShapeSize">160,129</av:Size>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <av:PointCollection x:Key="TrueConnector">200.5,721 131,721 131,821.5</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">360.5,721 480,721 480,819</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">0,821.5</av:Point>
                              <av:Size x:Key="ShapeSize">262,117</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">131,938.5 131,981.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap2010:Annotation.AnnotationText="We reached the Repetitive activity. &#xA;Ignore the error to continue with the next iteration." DisplayName="Assign Result to Ignore" sap:VirtualizedContainerService.HintSize="262,117" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Ignore]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">31,981.5</av:Point>
                                  <av:Size x:Key="ShapeSize">200,82</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">131,1063.5 131,1120.1 380,1120.1</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:WriteTextFile sap2010:Annotation.AnnotationText="Clear the Skip Iteration Flag" DisplayName="Write Error Template Without flag" FileName="[TemplateFilePath]" sap:VirtualizedContainerService.HintSize="200,82" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[ErrorTemplateBackup.Replace(SkipIterationFlagText, &quot;&quot;)]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:WriteTextFile>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID0">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">380,1093.6</av:Point>
                                      <av:Size x:Key="ShapeSize">200,53</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Result" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[result.ToString]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowStep x:Name="__ReferenceID5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">349,819</av:Point>
                              <av:Size x:Key="ShapeSize">262,102</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">480,921 480,1093.6</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap2010:Annotation.AnnotationText="Re-throw the error and this handler will be executed again for the parent element." DisplayName="Assign Result to Continue" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Continue]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <FlowStep.Next>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">650,606.04</av:Point>
                          <av:Size x:Key="ShapeSize">200,66</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">750,672.04 750,727</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Template Localization" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_56">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))" Name="LocalizationData" />
                          <Variable x:TypeArguments="x:String" Name="UICulture" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign Dictionary " sap:VirtualizedContainerService.HintSize="484,64" sap2010:WorkflowViewState.IdRef="Assign_73">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))">[LocalizationData]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))" xml:space="preserve">[New Dictionary(Of String, Dictionary(Of String, String)) From 
{
{"en", New Dictionary(Of String, String) From {
{"[LOCALIZATION_PLACEHOLDER_LINE1]", "Something went wrong with &lt;strong&gt;[ACTIONTYPE_PLACEHOLDER]&lt;/strong&gt;."},
{"[LOCALIZATION_PLACEHOLDER_LINE2]","Activity &lt;strong&gt;[ACTIVITYNAME_PLACEHOLDER]&lt;/strong&gt; (&lt;strong&gt;[ACTIVITYTYPE_PLACEHOLDER]&lt;/strong&gt;) failed:"},
{"[LOCALIZATION_PLACEHOLDER_LINE4]","You can find the activity following this path:"},
{"[LOCALIZATION_PLACEHOLDER_ACTION1]", "Press &lt;strong&gt;Retry&lt;/strong&gt; to re-execute the activity."},
{"[LOCALIZATION_PLACEHOLDER_ACTION2]", "Press &lt;strong&gt;Skip&lt;/strong&gt; to continue execution from the next activity."},
{"[LOCALIZATION_PLACEHOLDER_ACTION3]", "Press &lt;strong&gt;Skip Item&lt;/strong&gt; to continue with the next item."},
{"[LOCALIZATION_PLACEHOLDER_ACTION4]", "Press &lt;strong&gt;Stop&lt;/strong&gt; to stop the execution of the process."},
{"[LOCALIZATION_PLACEHOLDER_BUTTON1]", "Stop"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON2]", "Skip Item"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON3]", "Skip"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON4]", "Retry"},
{"[LOCALIZATION_PROBLEM_ELEM]", "Problem with element:"},
{"[LOCALIZATION_PLACEHOLDER_EXCELPATH]", "Excel file path:"},
{"[LOCALIZATION_PLACEHOLDER_OUTLOOKACCOUNT]", "Outlook account:"},
{"[LOCALIZATION_AN_ACTION]","an Action"},
{"[LOCALIZATION_THE_APPLICATION]","the Application"}
}},
{"ja", New Dictionary(Of String, String) From {
{"[LOCALIZATION_PLACEHOLDER_LINE1]", "&lt;strong&gt;[ACTIONTYPE_PLACEHOLDER]&lt;/strong&gt; にエラーが発生しました。"},
{"[LOCALIZATION_PLACEHOLDER_LINE2]","&lt;strong&gt;[ACTIVITYNAME_PLACEHOLDER]&lt;/strong&gt; (&lt;strong&gt;[ACTIVITYTYPE_PLACEHOLDER]&lt;/strong&gt;) アクティビティが次の理由で失敗しました。"},
{"[LOCALIZATION_PLACEHOLDER_LINE4]","アクティビティは次のパスから確認できます。"},
{"[LOCALIZATION_PLACEHOLDER_ACTION1]", "アクティビティを再実行するには &lt;strong&gt;[再試行]&lt;/strong&gt; をクリックしてください。"},
{"[LOCALIZATION_PLACEHOLDER_ACTION2]", "次のアクティビティから実行を続行する場合は &lt;strong&gt;[スキップ]&lt;/strong&gt; をクリックしてください。"},
{"[LOCALIZATION_PLACEHOLDER_ACTION3]", "次のアイテムを続行する場合は &lt;strong&gt;[アイテムをスキップ]&lt;/strong&gt; をクリックしてください。	"},
{"[LOCALIZATION_PLACEHOLDER_ACTION4]", "プロセスの実行を停止する場合は &lt;strong&gt;[停止]&lt;/strong&gt; をクリックしてください。"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON1]", "停止"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON2]", "アイテムをスキップ"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON3]", "スキップ"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON4]", "再試行"},
{"[LOCALIZATION_PROBLEM_ELEM]", "問題のある要素:"},
{"[LOCALIZATION_PLACEHOLDER_EXCELPATH]", "Excel ファイル パス:"},
{"[LOCALIZATION_PLACEHOLDER_OUTLOOKACCOUNT]", "Outlook アカウント:"},
{"[LOCALIZATION_AN_ACTION]","アクション"},
{"[LOCALIZATION_THE_APPLICATION]","アプリケーション"}
}},
{"fr", New Dictionary(Of String, String) From {
{"[LOCALIZATION_PLACEHOLDER_LINE1]", "Une erreur s’est produite avec &lt;strong&gt;[ACTIONTYPE_PLACEHOLDER]&lt;/strong&gt;."},
{"[LOCALIZATION_PLACEHOLDER_LINE2]","L’activité &lt;strong&gt;[ACTIVITYNAME_PLACEHOLDER]&lt;/strong&gt; (&lt;strong&gt;[ACTIVITYTYPE_PLACEHOLDER]&lt;/strong&gt;) a échoué :"},
{"[LOCALIZATION_PLACEHOLDER_LINE4]","Vous trouverez cette activité en cliquant sur le lien suivant:"},
{"[LOCALIZATION_PLACEHOLDER_ACTION1]", "Appuyez sur &lt;strong&gt;Réessayer&lt;/strong&gt; pour exécuter à nouveau l’activité."},
{"[LOCALIZATION_PLACEHOLDER_ACTION2]", "Appuyez sur &lt;strong&gt;Ignorer&lt;/strong&gt; pour poursuivre l’exécution à partir de l’activité suivante."},
{"[LOCALIZATION_PLACEHOLDER_ACTION3]", "Appuyez sur &lt;strong&gt;Ignorer cet élément&lt;/strong&gt; pour passer à l’élément suivant."},
{"[LOCALIZATION_PLACEHOLDER_ACTION4]", "Appuyez sur &lt;strong&gt;Annuler&lt;/strong&gt; pour interrompre l’exécution du processus."},
{"[LOCALIZATION_PLACEHOLDER_BUTTON1]", "Annuler"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON2]", "Ignorer cet élément"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON3]", "Ignorer"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON4]", "Réessayer"},
{"[LOCALIZATION_PROBLEM_ELEM]", "Problème avec l'élément :"},
{"[LOCALIZATION_PLACEHOLDER_EXCELPATH]", "Chemin du fichier Excel : "},
{"[LOCALIZATION_PLACEHOLDER_OUTLOOKACCOUNT]", "Compte Outlook :"},
{"[LOCALIZATION_AN_ACTION]","une action"},
{"[LOCALIZATION_THE_APPLICATION]","l'application"}
}},
{"ru", New Dictionary(Of String, String) From {
{"[LOCALIZATION_PLACEHOLDER_LINE1]", "Произошла ошибка &lt;strong&gt;[ACTIONTYPE_PLACEHOLDER]&lt;/strong&gt;."},
{"[LOCALIZATION_PLACEHOLDER_LINE2]","Сбой действия &lt;strong&gt;[ACTIVITYNAME_PLACEHOLDER]&lt;/strong&gt; (&lt;strong&gt;[ACTIVITYTYPE_PLACEHOLDER]&lt;/strong&gt;):"},
{"[LOCALIZATION_PLACEHOLDER_LINE4]","Расположение действия:"},
{"[LOCALIZATION_PLACEHOLDER_ACTION1]", "Нажмите &lt;strong&gt;Повторить попытку&lt;/strong&gt;, чтобы выполнить действие еще раз."},
{"[LOCALIZATION_PLACEHOLDER_ACTION2]", "Нажмите &lt;strong&gt;Пропустить&lt;/strong&gt;, чтобы продолжить выполнение со следующего действия."},
{"[LOCALIZATION_PLACEHOLDER_ACTION3]", "Нажмите &lt;strong&gt;Пропустить элемент&lt;/strong&gt;, чтобы продолжить со следующего элемента."},
{"[LOCALIZATION_PLACEHOLDER_ACTION4]", "Нажмите &lt;strong&gt;Остановить&lt;/strong&gt;, чтобы остановить выполнение процесса."},
{"[LOCALIZATION_PLACEHOLDER_BUTTON1]", "Остановить"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON2]", "Пропустить элемент"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON3]", "Пропустить"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON4]", "Повторить попытку"},
{"[LOCALIZATION_PROBLEM_ELEM]", "Проблема с элементом:"},
{"[LOCALIZATION_PLACEHOLDER_EXCELPATH]", "Путь к файлу Excel:"},
{"[LOCALIZATION_PLACEHOLDER_OUTLOOKACCOUNT]", "Учетная запись Outlook:"},
{"[LOCALIZATION_AN_ACTION]","действием"},
{"[LOCALIZATION_THE_APPLICATION]","приложением"}
}},
{"zh-CN", New Dictionary(Of String, String) From {
{"[LOCALIZATION_PLACEHOLDER_LINE1]", "&lt;strong&gt;[ACTIONTYPE_PLACEHOLDER]&lt;/strong&gt; 出现问题。"},
{"[LOCALIZATION_PLACEHOLDER_LINE2]","活动&lt;strong&gt;[ACTIVITYNAME_PLACEHOLDER]&lt;/strong&gt; (&lt;strong&gt;[ACTIVITYTYPE_PLACEHOLDER]&lt;/strong&gt;) 失败:"},
{"[LOCALIZATION_PLACEHOLDER_LINE4]","您可以在以下路径中找到活动:"},
{"[LOCALIZATION_PLACEHOLDER_ACTION1]", "按&amp;ldquo;重试&amp;rdquo;&lt;strong&gt;&lt;/strong&gt;重新执行活动。"},
{"[LOCALIZATION_PLACEHOLDER_ACTION2]", "按&amp;ldquo;跳过&amp;rdquo;&lt;strong&gt;&lt;/strong&gt;继续执行下一个活动。"},
{"[LOCALIZATION_PLACEHOLDER_ACTION3]", "按&amp;ldquo;跳过项目&amp;rdquo;&lt;strong&gt;&lt;/strong&gt;继续处理下一个项目。"},
{"[LOCALIZATION_PLACEHOLDER_ACTION4]", "按&amp;ldquo;停止&amp;rdquo;&lt;strong&gt;&lt;/strong&gt;停止执行流程。"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON1]", "停止"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON2]", "跳过项目"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON3]", "跳过"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON4]", "重试"},
{"[LOCALIZATION_PROBLEM_ELEM]", "元素问题:"},
{"[LOCALIZATION_PLACEHOLDER_EXCELPATH]", "Excel 文件路径:"},
{"[LOCALIZATION_PLACEHOLDER_OUTLOOKACCOUNT]", "Outlook 帐户:"},
{"[LOCALIZATION_AN_ACTION]","一项操作"},
{"[LOCALIZATION_THE_APPLICATION]","the Application"}
}},
{"de", New Dictionary(Of String, String) From {
{"[LOCALIZATION_PLACEHOLDER_LINE1]", "Bei &lt;strong&gt;[ACTIONTYPE_PLACEHOLDER]&lt;/strong&gt; ist ein Fehler aufgetreten."},
{"[LOCALIZATION_PLACEHOLDER_LINE2]","Aktivität &lt;strong&gt;[ACTIVITYNAME_PLACEHOLDER]&lt;/strong&gt; (&lt;strong&gt;[ACTIVITYTYPE_PLACEHOLDER]&lt;/strong&gt;) fehlgeschlagen:"},
{"[LOCALIZATION_PLACEHOLDER_LINE4]","Sie finden die Aktivität unter folgendem Pfad:"},
{"[LOCALIZATION_PLACEHOLDER_ACTION1]", "Drücken Sie &lt;strong&gt;Wiederholen&lt;/strong&gt;, um die Aktivität erneut auszuführen."},
{"[LOCALIZATION_PLACEHOLDER_ACTION2]", "Drücken Sie &lt;strong&gt;Überspringen&lt;/strong&gt;, um die Ausführung ab der nächsten Aktivität fortzusetzen."},
{"[LOCALIZATION_PLACEHOLDER_ACTION3]", "Drücken Sie &lt;strong&gt;Element überspringen&lt;/strong&gt;, um mit dem nächsten Element fortzufahren."},
{"[LOCALIZATION_PLACEHOLDER_ACTION4]", "Drücken Sie &lt;strong&gt;Beenden&lt;/strong&gt;, um die Ausführung des Prozesses zu beenden."},
{"[LOCALIZATION_PLACEHOLDER_BUTTON1]", "Beenden"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON2]", "Element überspringen"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON3]", "Überspringen"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON4]", "Wiederholen"},
{"[LOCALIZATION_PROBLEM_ELEM]", "Problem mit Element:"},
{"[LOCALIZATION_PLACEHOLDER_EXCELPATH]", "Excel-Dateipfad:"},
{"[LOCALIZATION_PLACEHOLDER_OUTLOOKACCOUNT]", "Outlook-Konto:"},
{"[LOCALIZATION_AN_ACTION]","eine Aktion"},
{"[LOCALIZATION_THE_APPLICATION]","der Anwendung"}
}},
{"es", New Dictionary(Of String, String) From {
{"[LOCALIZATION_PLACEHOLDER_LINE1]", "Se ha producido un error con &lt;strong&gt;[ACTIONTYPE_PLACEHOLDER]&lt;/strong&gt;"},
{"[LOCALIZATION_PLACEHOLDER_LINE2]","Error en la actividad  &lt;strong&gt;[ACTIVITYNAME_PLACEHOLDER]&lt;/strong&gt; (&lt;strong&gt;[ACTIVITYTYPE_PLACEHOLDER]&lt;/strong&gt;): "},
{"[LOCALIZATION_PLACEHOLDER_LINE4]","Puede encontrar la actividad siguiendo esta ruta:"},
{"[LOCALIZATION_PLACEHOLDER_ACTION1]", "Pulse &lt;strong&gt;Reintentar&lt;/strong&gt; para volver a ejecutar la actividad."},
{"[LOCALIZATION_PLACEHOLDER_ACTION2]", "Pulse &lt;strong&gt;Omitir&lt;/strong&gt; para continuar con la ejecución de la siguiente actividad."},
{"[LOCALIZATION_PLACEHOLDER_ACTION3]", "Pulse &lt;strong&gt;Omitir elemento&lt;/strong&gt; para continuar con el siguiente elemento."},
{"[LOCALIZATION_PLACEHOLDER_ACTION4]", "Pulse &lt;strong&gt;Detener&lt;/strong&gt; para detener la ejecución del proceso."},
{"[LOCALIZATION_PLACEHOLDER_BUTTON1]", "Detener"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON2]", "Omitir elemento"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON3]", "Omitir"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON4]", "Reintentar"},
{"[LOCALIZATION_PROBLEM_ELEM]", "Problema con el Elemento:"},
{"[LOCALIZATION_PLACEHOLDER_EXCELPATH]", "Ruta del archivo de Excel:"},
{"[LOCALIZATION_PLACEHOLDER_OUTLOOKACCOUNT]", "Cuenta de Outlook:"},
{"[LOCALIZATION_AN_ACTION]","una Acción"},
{"[LOCALIZATION_THE_APPLICATION]","la aplicación"}
}},
{"es-MX", New Dictionary(Of String, String) From {
{"[LOCALIZATION_PLACEHOLDER_LINE1]", "Se ha producido un error con &lt;strong&gt;[ACTIONTYPE_PLACEHOLDER]"},
{"[LOCALIZATION_PLACEHOLDER_LINE2]","Error en la actividad  &lt;strong&gt;[ACTIVITYNAME_PLACEHOLDER]&lt;/strong&gt; (&lt;strong&gt;[ACTIVITYTYPE_PLACEHOLDER]&lt;/strong&gt;): "},
{"[LOCALIZATION_PLACEHOLDER_LINE4]","Puede encontrar la actividad siguiendo esta ruta:"},
{"[LOCALIZATION_PLACEHOLDER_ACTION1]", "Pulse &lt;strong&gt;Reintentar&lt;/strong&gt; para volver a ejecutar la actividad."},
{"[LOCALIZATION_PLACEHOLDER_ACTION2]", "Pulse &lt;strong&gt;Omitir&lt;/strong&gt; para continuar con la ejecución de la siguiente actividad."},
{"[LOCALIZATION_PLACEHOLDER_ACTION3]", "Pulse &lt;strong&gt;Omitir elemento&lt;/strong&gt; para continuar con el siguiente elemento."},
{"[LOCALIZATION_PLACEHOLDER_ACTION4]", "Pulse &lt;strong&gt;Detener&lt;/strong&gt; para detener la ejecución del proceso."},
{"[LOCALIZATION_PLACEHOLDER_BUTTON1]", "Detener"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON2]", "Omitir elemento"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON3]", "Omitir"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON4]", "Reintentar"},
{"[LOCALIZATION_PROBLEM_ELEM]", "Problema con el Elemento:"},
{"[LOCALIZATION_PLACEHOLDER_EXCELPATH]", "Ruta del archivo Excel:"},
{"[LOCALIZATION_PLACEHOLDER_OUTLOOKACCOUNT]", "Cuenta de Outlook:"},
{"[LOCALIZATION_AN_ACTION]","una Acción"},
{"[LOCALIZATION_THE_APPLICATION]","la Aplicación"}
}},
{"pt", New Dictionary(Of String, String) From {
{"[LOCALIZATION_PLACEHOLDER_LINE1]", "Ocorreu um erro com &lt;strong&gt;[ACTIONTYPE_PLACEHOLDER]"},
{"[LOCALIZATION_PLACEHOLDER_LINE2]","Ocorreu uma falha na atividade &lt;strong&gt;[ACTIVITYNAME_PLACEHOLDER]&lt;/strong&gt; (&lt;strong&gt;[ACTIVITYTYPE_PLACEHOLDER]"},
{"[LOCALIZATION_PLACEHOLDER_LINE4]","Pode encontrar a atividade ao seguir este caminho: "},
{"[LOCALIZATION_PLACEHOLDER_ACTION1]", "Prima &lt;strong&gt;Tentar novamente&lt;/strong&gt; para voltar a executar a atividade atual."},
{"[LOCALIZATION_PLACEHOLDER_ACTION2]", "Prima &lt;strong&gt;Ignorar&lt;/strong&gt; para continuar a execução a partir da atividade seguinte."},
{"[LOCALIZATION_PLACEHOLDER_ACTION3]", "Prima &lt;strong&gt;Ignorar item&lt;/strong&gt; para avançar para o item seguinte."},
{"[LOCALIZATION_PLACEHOLDER_ACTION4]", "Prima &lt;strong&gt;Parar&lt;/strong&gt; para parar a execução do processo."},
{"[LOCALIZATION_PLACEHOLDER_BUTTON1]", "Parar"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON2]", "Ignorar item"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON3]", "Ignorar"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON4]", "Tentar novamente"},
{"[LOCALIZATION_PROBLEM_ELEM]", "Problema no Elemento:"},
{"[LOCALIZATION_PLACEHOLDER_EXCELPATH]", "Caminho de ficheiro do Excel:"},
{"[LOCALIZATION_PLACEHOLDER_OUTLOOKACCOUNT]", "Conta do Outlook:"},
{"[LOCALIZATION_AN_ACTION]","uma Ação"},
{"[LOCALIZATION_THE_APPLICATION]",""}
}},
{"pt-BR", New Dictionary(Of String, String) From {
{"[LOCALIZATION_PLACEHOLDER_LINE1]", "Ocorreu um erro com &lt;strong&gt;[ACTIONTYPE_PLACEHOLDER]"},
{"[LOCALIZATION_PLACEHOLDER_LINE2]","Atividade &lt;strong&gt;[ACTIVITYNAME_PLACEHOLDER]&lt;/strong&gt; (&lt;strong&gt;[ACTIVITYTYPE_PLACEHOLDER]&lt;/strong&gt;) falhou: "},
{"[LOCALIZATION_PLACEHOLDER_LINE4]","É possível encontrar a atividade por este caminho:"},
{"[LOCALIZATION_PLACEHOLDER_ACTION1]", "Pressione &lt;strong&gt;Tentar Novamente&lt;/strong&gt; para executar de novo a atividade."},
{"[LOCALIZATION_PLACEHOLDER_ACTION2]", "Pressione &lt;strong&gt;Pular&lt;/strong&gt; para continuar a execução a partir da próxima atividade."},
{"[LOCALIZATION_PLACEHOLDER_ACTION3]", "Pressione &lt;strong&gt;Pular Item&lt;/strong&gt; para retomar o próximo item."},
{"[LOCALIZATION_PLACEHOLDER_ACTION4]", "Pressione &lt;strong&gt;Parar&lt;/strong&gt; para pausar a execução do processo."},
{"[LOCALIZATION_PLACEHOLDER_BUTTON1]", "Parar"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON2]", "Pular Item"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON3]", "Pular"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON4]", "Tentar Novamente"},
{"[LOCALIZATION_PROBLEM_ELEM]", "Problema com o Elemento:"},
{"[LOCALIZATION_PLACEHOLDER_EXCELPATH]", "Caminho do arquivo do Excel:"},
{"[LOCALIZATION_PLACEHOLDER_OUTLOOKACCOUNT]", "Conta do Outlook:"},
{"[LOCALIZATION_AN_ACTION]","uma Ação"},
{"[LOCALIZATION_THE_APPLICATION]","a Aplicação"}
}},
{"ko", New Dictionary(Of String, String) From {
{"[LOCALIZATION_PLACEHOLDER_LINE1]", "&lt;strong&gt;[ACTIONTYPE_PLACEHOLDER]&lt;/strong&gt;에 문제가 있습니다. "},
{"[LOCALIZATION_PLACEHOLDER_LINE2]","액티비티 &lt;strong&gt;[ACTIVITYNAME_PLACEHOLDER]&lt;/strong&gt;(&lt;strong&gt;[ACTIVITYTYPE_PLACEHOLDER]&lt;/strong&gt;)에 실패하였습니다. "},
{"[LOCALIZATION_PLACEHOLDER_LINE4]","다음 경로에서 액티비티를 찾을 수 있습니다. "},
{"[LOCALIZATION_PLACEHOLDER_ACTION1]", "현재 액티비티를 다시 실행하려면 &lt;strong&gt;재시도&lt;/strong&gt;를 누르십시오."},
{"[LOCALIZATION_PLACEHOLDER_ACTION2]", "다음 액티비티에서 실행을 계속하려면 &lt;strong&gt;건너뛰기&lt;/strong&gt;를 누르십시오."},
{"[LOCALIZATION_PLACEHOLDER_ACTION3]", "다음 항목으로 진행하려면 &lt;strong&gt;항목 건너뛰기&lt;/strong&gt;를 누르십시오."},
{"[LOCALIZATION_PLACEHOLDER_ACTION4]", "프로세스의 실행을 중지하려면 &lt;strong&gt;중지&lt;/strong&gt;를 누르십시오."},
{"[LOCALIZATION_PLACEHOLDER_BUTTON1]", "중지"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON2]", "항목 건너뛰기"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON3]", "건너뛰기"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON4]", "재시도"},
{"[LOCALIZATION_PROBLEM_ELEM]", "엘리먼트 관련 문제:"},
{"[LOCALIZATION_PLACEHOLDER_EXCELPATH]", "Excel 파일 경로"},
{"[LOCALIZATION_PLACEHOLDER_OUTLOOKACCOUNT]", "Outlook 계정:"},
{"[LOCALIZATION_AN_ACTION]","액션"},
{"[LOCALIZATION_THE_APPLICATION]","애플리케이션"}
}},
{"tr", New Dictionary(Of String, String) From {
{"[LOCALIZATION_PLACEHOLDER_LINE1]", "&lt;strong&gt;[ACTIONTYPE_PLACEHOLDER]&lt;/strong&gt; uygulamasında sorun oldu."},
{"[LOCALIZATION_PLACEHOLDER_LINE2]","&lt;strong&gt;[ACTIVITYNAME_PLACEHOLDER]&lt;/strong&gt; (&lt;strong&gt;[ACTIVITYTYPE_PLACEHOLDER]&lt;/strong&gt;) etkinliği başarısız oldu:"},
{"[LOCALIZATION_PLACEHOLDER_LINE4]","Etkinliğe bu yoldan ulaşabilirsiniz: "},
{"[LOCALIZATION_PLACEHOLDER_ACTION1]", "Etkinliği tekrar yürütmek için lütfen &lt;strong&gt;Yeniden dene&lt;/strong&gt; düğmesine basın."},
{"[LOCALIZATION_PLACEHOLDER_ACTION2]", "Sonraki etkinlikten yürütmeye devam etmek için  &lt;strong&gt;Atla&lt;/strong&gt; düğmesine basın."},
{"[LOCALIZATION_PLACEHOLDER_ACTION3]", "Sonraki öğeyle devam etmek için &lt;strong&gt;Öğeyi Atla&lt;/strong&gt; düğmesine basın."},
{"[LOCALIZATION_PLACEHOLDER_ACTION4]", "İşlemin yürütülmesini durdurmak için &lt;strong&gt;Durdur&lt;/strong&gt;’a basın."},
{"[LOCALIZATION_PLACEHOLDER_BUTTON1]", "Durdur"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON2]", "Öğeyi Atla"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON3]", "Atla"},
{"[LOCALIZATION_PLACEHOLDER_BUTTON4]", "Yeniden dene"},
{"[LOCALIZATION_PROBLEM_ELEM]", "Öğede Sorun:"},
{"[LOCALIZATION_PLACEHOLDER_EXCELPATH]", "Excel dosyası yolu:"},
{"[LOCALIZATION_PLACEHOLDER_OUTLOOKACCOUNT]", "Outlook hesabı:"},
{"[LOCALIZATION_AN_ACTION]","Eylem"},
{"[LOCALIZATION_THE_APPLICATION]","Uygulama"}
}}
}]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign UI Culture" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[UICulture]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Globalization.CultureInfo.CurrentUICulture.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If sap2010:Annotation.AnnotationText="If the Studio UI Culture (language) is not localized in this handlers, use the English culture as default. This can happen when new languages are added to Studio but the GlobalExceptionHandler localization is not updated." Condition="[Not LocalizationData.ContainsKey(UICulture)]" DisplayName="Default to 'en' UICulture" sap:VirtualizedContainerService.HintSize="484,269.6" sap2010:WorkflowViewState.IdRef="If_15">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Assign DisplayName="Assign &quot;en&quot; to UICulture" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_71">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[UICulture]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">en</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                        </If>
                        <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="For Each Localization string" sap:VirtualizedContainerService.HintSize="484,194" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[LocalizationData(UICulture)]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)" Name="pair" />
                              </ActivityAction.Argument>
                              <Assign DisplayName="Replace placeholder by localized string" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(pair.Key, pair.Value)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                        <Assign DisplayName="Assign placeholder_localization_DefaultAction" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_82">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[placeholderLocDefaultAction]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[LocalizationData(UICulture)("[LOCALIZATION_AN_ACTION]")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign placeholder_localization_TheApplication" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_84">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[placeholderLocTheApplication]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[LocalizationData(UICulture)("[LOCALIZATION_THE_APPLICATION]")]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">650,727</av:Point>
                              <av:Size x:Key="ShapeSize">200,66</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">750,793 750,844</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Prepare the Custom Input Form" sap:VirtualizedContainerService.HintSize="1194,1504" sap2010:WorkflowViewState.IdRef="Sequence_49">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="ActionType" />
                              <Variable x:TypeArguments="x:String" Default="%[ACTIONTYPE_PLACEHOLDER]" Name="placeholderActionType" />
                              <Variable x:TypeArguments="x:String" Name="ActivityName" />
                              <Variable x:TypeArguments="x:String" Name="ActivityType" />
                              <Variable x:TypeArguments="x:String" Name="ProblemDescription" />
                              <Variable x:TypeArguments="x:String" Default="%[ACTIVITYTYPE_PLACEHOLDER]" Name="placeholderActivityType" />
                              <Variable x:TypeArguments="x:String" Default="%[PROBLEMDESC_PLACEHOLDER]" Name="ProblemDescriptionPlaceholder" />
                              <Variable x:TypeArguments="x:String" Name="PackageName" />
                              <Variable x:TypeArguments="x:String" Name="MainFileContent" />
                              <Variable x:TypeArguments="sx:XmlNamespaceManager" Name="XmlNamespaceManagerMain" />
                              <Variable x:TypeArguments="sx:XmlDocument" Name="XmlMainFile" />
                              <Variable x:TypeArguments="x:String" Name="CardTag" />
                              <Variable x:TypeArguments="x:String" Default="%[ERRORPATH_PLACEHOLDER]" Name="placeholderErrorPath" />
                              <Variable x:TypeArguments="x:String" Name="ApplicationURL" />
                              <Variable x:TypeArguments="x:String" Name="placeholderDivAnchor" />
                              <Variable x:TypeArguments="x:String" Name="ApplicationName" />
                              <Variable x:TypeArguments="x:String" Default="%[ACTIVITYNAME_PLACEHOLDER]" Name="placeholderActivityName" />
                              <Variable x:TypeArguments="sx:XmlNode" Name="ActivityCardNode" />
                              <Variable x:TypeArguments="x:Boolean" Default="False" Name="FoundRepetitiveActivity" />
                              <Variable x:TypeArguments="x:String" Default="%[SKIPITERATION_VIS_PLACEHOLDER]" Name="placeholderSkipIteration" />
                              <Variable x:TypeArguments="x:String" Default="%[EXCEL_CONTAINER_VIS_PLACEHOLDER]" Name="placeholderExcelContainerVis" />
                              <Variable x:TypeArguments="x:String" Default="%[OUTLOOK_CONTAINER_VIS_PLACEHOLDER]" Name="placeholderOutlookContainerVis" />
                              <Variable x:TypeArguments="x:String" Default="%[APPCARD_CONTAINER_VIS_PLACEHOLDER]" Name="placeholderAppCardContainerVis" />
                              <Variable x:TypeArguments="x:String" Default="%[APPCARDELEMENT_CONTAINER_VIS_PLACEHOLDER]" Name="placeholderAppElemContainerVis" />
                              <Variable x:TypeArguments="x:String" Default="%[PLACEHOLDER_ANCHORSCREENSHOT]" Name="placeholderAnchorScreenshot" />
                              <Variable x:TypeArguments="x:String" Default="%[PLACEHOLDER_ELEMENTSCREENSHOT]" Name="placeholderElementScreenshot" />
                              <Variable x:TypeArguments="x:String" Default="%[PLACEHOLDER_OUTLOOKACC]" Name="placeholderOutlookAcc" />
                              <Variable x:TypeArguments="x:Boolean" Name="isAgentDesktop" />
                              <Variable x:TypeArguments="x:String" Default="%[ERRORPATH_CONTAINER_VIS_PLACEHOLDER]" Name="placeholderErrorPathVis" />
                              <Variable x:TypeArguments="x:String" Default="display: none;" Name="cDisplayNone" />
                              <Variable x:TypeArguments="x:String" Default="%[APPLICATION_NAME_PLACEHOLDER]" Name="ApplicationNamePlaceholder" />
                              <Variable x:TypeArguments="x:String" Default="%[PLACEHOLDER_APPNAME]" Name="placeholderAppName" />
                              <Variable x:TypeArguments="x:String" Default="%[PLACEHOLDER_SCREENSHOTAPPCARD]" Name="placeholderScreenshotAppCard" />
                              <Variable x:TypeArguments="x:String" Name="ScreenshotAnchor" />
                              <Variable x:TypeArguments="x:String" Name="ScreenshotCard" />
                              <Variable x:TypeArguments="x:String" Name="ScreenshotElement" />
                              <Variable x:TypeArguments="sx:XmlNode" Name="ChildNodeTarget" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign DisplayName="Multiple Assign Error Info" sap:VirtualizedContainerService.HintSize="1152,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[PackageName]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[String.Join(".", errorInfo.ActivityInfo.TypeName.Split("."c).Take(3))]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[ActivityName]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[errorInfo.ActivityInfo.Name]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[ActivityType]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[errorInfo.ActivityInfo.TypeName]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[ProblemDescription]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[errorInfo.Exception.Message+Environment.NewLine+if(errorInfo.Exception.InnerException isnot Nothing,errorInfo.Exception.InnerException.Message,cEmptyString)]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MultipleAssign>
                            <Sequence DisplayName="Multiple Replace ActivityType characters" sap:VirtualizedContainerService.HintSize="1152,66" sap2010:WorkflowViewState.IdRef="Sequence_26">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Replace BuilderPattern="^(.*)\.(\w+)$" DisplayName="Replace ActivityType characters1" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Replace_4" Input="[ActivityType]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ST&quot;,&quot;OperationName&quot;:&quot;Starts with&quot;,&quot;OperationValue&quot;:&quot;^&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:1,&quot;OperationID&quot;:&quot;ANYTHING&quot;,&quot;OperationName&quot;:&quot;Anything&quot;,&quot;OperationValue&quot;:&quot;.&quot;,&quot;QuantifierFirstValue&quot;:&quot;*&quot;,&quot;QuantifierID&quot;:&quot;ANY&quot;,&quot;QuantifierName&quot;:&quot;Any (0 or more)&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:2,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\.&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:3,&quot;OperationID&quot;:&quot;ANYWCHAR&quot;,&quot;OperationName&quot;:&quot;Any word character&quot;,&quot;OperationValue&quot;:&quot;\\w&quot;,&quot;QuantifierFirstValue&quot;:&quot;+&quot;,&quot;QuantifierID&quot;:&quot;OOM&quot;,&quot;QuantifierName&quot;:&quot;At least one (1 or more)&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:4,&quot;OperationID&quot;:&quot;END&quot;,&quot;OperationName&quot;:&quot;Ends with&quot;,&quot;OperationValue&quot;:&quot;$&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="^(.*)\.(\w+)$" RegexOption="IgnoreCase" Replacement="$2" Result="[ActivityType]" />
                              <ui:Replace BuilderPattern="([A-Z])" DisplayName="Replace ActivityType characters2" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Replace_5" Input="[ActivityType]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;([A-Z])&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="([A-Z])" RegexOption="None" Replacement=" $1" Result="[ActivityType]" />
                              <ui:Replace BuilderPattern="^\s*" DisplayName="Replace ActivityType characters3" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Replace_6" Input="[ActivityType]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ST&quot;,&quot;OperationName&quot;:&quot;Starts with&quot;,&quot;OperationValue&quot;:&quot;^&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:1,&quot;OperationID&quot;:&quot;WHITESP&quot;,&quot;OperationName&quot;:&quot;Whitespace&quot;,&quot;OperationValue&quot;:&quot;\\s&quot;,&quot;QuantifierFirstValue&quot;:&quot;*&quot;,&quot;QuantifierID&quot;:&quot;ANY&quot;,&quot;QuantifierName&quot;:&quot;Any (0 or more)&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="^\s*" RegexOption="IgnoreCase" Replacement="[cEmptyString]" Result="[ActivityType]" />
                            </Sequence>
                            <TryCatch DisplayName="Try Catch : Parse Main File to XML" sap:VirtualizedContainerService.HintSize="1152,51" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch.Try>
                                <Sequence DisplayName="Parse Main File to XML" sap:VirtualizedContainerService.HintSize="560.8,1602.4" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="Try Catch Access to Main File" sap:VirtualizedContainerService.HintSize="519.2,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                    <TryCatch.Variables>
                                      <Variable x:TypeArguments="x:String" Default="Main.xaml" Name="MainFile" />
                                    </TryCatch.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <ui:ReadTextFile Content="[MainFileContent]" DisplayName="Read Text File - Main.xaml" FileName="[MainFile]" sap:VirtualizedContainerService.HintSize="334,84" sap2010:WorkflowViewState.IdRef="ReadTextFile_4" />
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="432,442" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="If wf runs from tray" sap:VirtualizedContainerService.HintSize="426,373" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:CopyFile ContinueOnError="{x:Null}" Destination="tmpMainSeqContext.txt" DisplayName="Copy File Main Sequence Content" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="False" Path="[MainFile]" />
                                            <ui:ReadTextFile Content="[MainFileContent]" DisplayName="Read tmpMainSeq File" FileName="tmpMainSeqContext.txt" sap:VirtualizedContainerService.HintSize="384,84" sap2010:WorkflowViewState.IdRef="ReadTextFile_5" />
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <Assign DisplayName="Assign XmlMainFile" sap:VirtualizedContainerService.HintSize="519.2,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sx:XmlDocument">[XmlMainFile]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sx:XmlDocument">[New XmlDocument()]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign xmlNamespaceManagerMain" sap:VirtualizedContainerService.HintSize="519.2,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sx:XmlNamespaceManager">[XmlNamespaceManagerMain]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sx:XmlNamespaceManager">[New XmlNamespaceManager(XmlMainFile.NameTable)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <InvokeMethod DisplayName="Create XML tree" sap:VirtualizedContainerService.HintSize="519.2,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="LoadXml">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="sx:XmlDocument">[XmlMainFile]</InArgument>
                                    </InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="x:String">[MainFileContent]</InArgument>
                                  </InvokeMethod>
                                  <InvokeMethod sap2010:Annotation.AnnotationText="The default namespace needs to be specified for later usage of XPath queries: https://docs.microsoft.com/en-us/dotnet/standard/data/xml/xpath-queries-and-namespaces#the-default-namespace&#xA;&#xA;In this case, the default namespace can be referenced by the prefix &quot;xaml&quot;." DisplayName="Add the default namespace" sap:VirtualizedContainerService.HintSize="519.2,321.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="AddNamespace">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="sx:XmlNamespaceManager">[XmlNamespaceManagerMain]</InArgument>
                                    </InvokeMethod.TargetObject>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <InArgument x:TypeArguments="x:String">xaml</InArgument>
                                    <InArgument x:TypeArguments="x:String">http://schemas.microsoft.com/netfx/2009/xaml/activities</InArgument>
                                  </InvokeMethod>
                                  <Sequence sap2010:Annotation.AnnotationText="These namespaces are explicitly added to prevent errors when a particular check searches for elements in a namespace, but one of the workflows checked does not declare that namespace." DisplayName="Add commonly used namespaces" sap:VirtualizedContainerService.HintSize="519.2,192.8" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <InvokeMethod sap2010:Annotation.AnnotationText="Add the commonly used UI namespace: &#xA;xmlns:ui=&quot;http://schemas.uipath.com/workflow/activities&quot;" DisplayName="Add UI namespace" sap:VirtualizedContainerService.HintSize="236.8,225.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="AddNamespace">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sx:XmlNamespaceManager">[XmlNamespaceManagerMain]</InArgument>
                                      </InvokeMethod.TargetObject>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <InArgument x:TypeArguments="x:String">ui</InArgument>
                                      <InArgument x:TypeArguments="x:String">http://schemas.uipath.com/workflow/activities</InArgument>
                                    </InvokeMethod>
                                    <InvokeMethod sap2010:Annotation.AnnotationText="Add the commonly used SAP namespace: &#xA;xmlns:sap2010=&quot;http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation&quot;" DisplayName="Add SAP2010 namespace" sap:VirtualizedContainerService.HintSize="236.8,225.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="AddNamespace">
                                      <InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sx:XmlNamespaceManager">[XmlNamespaceManagerMain]</InArgument>
                                      </InvokeMethod.TargetObject>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <InArgument x:TypeArguments="x:String">sap2010</InArgument>
                                      <InArgument x:TypeArguments="x:String">http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation</InArgument>
                                    </InvokeMethod>
                                  </Sequence>
                                  <ui:ForEach x:TypeArguments="sx:XmlAttribute" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Add other namespaces defined in the workflow file." DisplayName="For Each Atttribute in XML" sap:VirtualizedContainerService.HintSize="519.2,448.8" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[XmlMainFile.DocumentElement.Attributes]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="sx:XmlAttribute">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sx:XmlAttribute" Name="Attribute" />
                                        </ActivityAction.Argument>
                                        <If Condition="[Attribute.Name.StartsWith(&quot;xmlns:&quot;)]" DisplayName="If File is xml" sap:VirtualizedContainerService.HintSize="483.2,283.2" sap2010:WorkflowViewState.IdRef="If_6">
                                          <If.Then>
                                            <InvokeMethod DisplayName="Add namespaces to manager" sap:VirtualizedContainerService.HintSize="236.8,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="AddNamespace">
                                              <InvokeMethod.TargetObject>
                                                <InArgument x:TypeArguments="sx:XmlNamespaceManager">[XmlNamespaceManagerMain]</InArgument>
                                              </InvokeMethod.TargetObject>
                                              <InArgument x:TypeArguments="x:String">[Attribute.Name.Substring(Attribute.Name.IndexOf(":")+1)]</InArgument>
                                              <InArgument x:TypeArguments="x:String">[Attribute.Value]</InArgument>
                                            </InvokeMethod>
                                          </If.Then>
                                        </If>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEach>
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Assign DisplayName="Assign isAgentDesktop" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_85">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Boolean">[isAgentDesktop]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                            <If Condition="[isAgentDesktop]" DisplayName="If isAgentDesktop " sap:VirtualizedContainerService.HintSize="1152,550" sap2010:WorkflowViewState.IdRef="If_16">
                              <If.Then>
                                <ui:MultipleAssign DisplayName="Multiple Assign isAgentDesktop - only basic info" sap:VirtualizedContainerService.HintSize="338,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_15">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_50">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderExcelContainerVis,cDisplayNone).Replace(placeholderOutlookContainerVis,cDisplayNone).Replace(placeholderAppCardContainerVis,cDisplayNone).Replace(placeholderAppElemContainerVis,cDisplayNone)]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_51">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[ActionType]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[placeholderLocDefaultAction]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_53">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderErrorPathVis,cDisplayNone)]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                </ui:MultipleAssign>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Sequence: isNotAgentDesktop" sap:VirtualizedContainerService.HintSize="539,402" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="Get Path of the Error" sap:VirtualizedContainerService.HintSize="497,66" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="ErrorPathInWf" />
                                      <Variable x:TypeArguments="x:Boolean" Default="True" Name="IsFirstActivityNode" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign DisplayName="Assign ActivityNode" sap:VirtualizedContainerService.HintSize="572,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="sx:XmlNode">[XmlMainFile.DocumentElement.SelectNodes("//*[@DisplayName="""+ActivityName+"""]",xmlNamespaceManagerMain)(0)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <While DisplayName="Add parent to path" sap:VirtualizedContainerService.HintSize="572,1050" sap2010:WorkflowViewState.IdRef="While_5">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <While.Condition>
                                        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="ActivityNode IsNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1">
                                          <mva:VisualBasicValue.Result>
                                            <OutArgument x:TypeArguments="x:Boolean" />
                                          </mva:VisualBasicValue.Result>
                                        </mva:VisualBasicValue>
                                      </While.Condition>
                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="526,892" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="s:String[]" Default="[{&quot;ui:RepeatNumberOfTimesX&quot;, &quot;ueab:ExcelForEachRow&quot;, &quot;umab:OutlookForEachMail&quot;, &quot;ui:ForEachFileX&quot;}]" Name="XmlNodeRepetitiveElements" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If Condition="[ActivityNode.Attributes IsNot Nothing AndAlso ActivityNode.Attributes(&quot;DisplayName&quot;) IsNot Nothing AndAlso (ActivityNode.Attributes(&quot;DisplayName&quot;).Value &lt;&gt;&quot;Do&quot; OrElse Not ActivityNode.Name.Contains(&quot;Sequence&quot;) )]" DisplayName="If Visible container / activity" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_7">
                                          <If.Then>
                                            <Assign DisplayName="Assign ErrorPath" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[ErrorPathInWf]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[" &gt; "+ ActivityNode.Attributes("DisplayName").Value+ErrorPathInWf]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                        <If sap2010:Annotation.AnnotationText="Do not show the Skip Iteration option if the error was generated by the Repetitive activity directly. Only if the error is inside the repetitive activity." Condition="[Not IsFirstActivityNode AndAlso XmlNodeRepetitiveElements.Contains(ActivityNode.Name)]" DisplayName="If there is a loop" sap:VirtualizedContainerService.HintSize="484,250" sap2010:WorkflowViewState.IdRef="If_11">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Assign DisplayName="Assign FoundRepetitiveActivity" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[FoundRepetitiveActivity]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                        <Assign DisplayName="Assign ParrentNode for Path" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="sx:XmlNode">[ActivityNode.ParentNode]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:Annotation.AnnotationText="Default value is set the True and after the first iteration we set it to False. We don't want to include the Stip Iteration option if the error was generated by the repetitive activity directly, i.e. it is the first activity node." DisplayName="Assign IsFirstActivityNode" sap:VirtualizedContainerService.HintSize="484,162" sap2010:WorkflowViewState.IdRef="Assign_69">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[IsFirstActivityNode]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                      </Sequence>
                                    </While>
                                    <ui:MultipleAssign DisplayName="Multiple Assign ErrorPath" sap:VirtualizedContainerService.HintSize="572,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                                      <ui:MultipleAssign.AssignOperations>
                                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                                            <ui:AssignOperation.To>
                                              <OutArgument x:TypeArguments="x:String">[ErrorPathInWf]</OutArgument>
                                            </ui:AssignOperation.To>
                                            <ui:AssignOperation.Value>
                                              <InArgument x:TypeArguments="x:String">["Main"+ErrorPathInWf]</InArgument>
                                            </ui:AssignOperation.Value>
                                          </ui:AssignOperation>
                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                                            <ui:AssignOperation.To>
                                              <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                            </ui:AssignOperation.To>
                                            <ui:AssignOperation.Value>
                                              <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderErrorPath, ErrorPathInWf)]</InArgument>
                                            </ui:AssignOperation.Value>
                                          </ui:AssignOperation>
                                        </scg:List>
                                      </ui:MultipleAssign.AssignOperations>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:MultipleAssign>
                                  </Sequence>
                                  <Switch x:TypeArguments="x:String" DisplayName="Switch Action Scope" Expression="[PackageName]" sap:VirtualizedContainerService.HintSize="497,204" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                                    <Switch.Default>
                                      <Sequence DisplayName="Default Case" sap:VirtualizedContainerService.HintSize="380,190" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:MultipleAssign DisplayName="Multiple Assign  Default case template" sap:VirtualizedContainerService.HintSize="338,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_14">
                                          <ui:MultipleAssign.AssignOperations>
                                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                                                <ui:AssignOperation.To>
                                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                                </ui:AssignOperation.To>
                                                <ui:AssignOperation.Value>
                                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderExcelContainerVis,cDisplayNone).Replace(placeholderOutlookContainerVis,cDisplayNone).Replace(placeholderAppCardContainerVis,cDisplayNone).Replace(placeholderAppElemContainerVis,cDisplayNone)]</InArgument>
                                                </ui:AssignOperation.Value>
                                              </ui:AssignOperation>
                                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
                                                <ui:AssignOperation.To>
                                                  <OutArgument x:TypeArguments="x:String">[ActionType]</OutArgument>
                                                </ui:AssignOperation.To>
                                                <ui:AssignOperation.Value>
                                                  <InArgument x:TypeArguments="x:String">[placeholderLocDefaultAction]</InArgument>
                                                </ui:AssignOperation.Value>
                                              </ui:AssignOperation>
                                            </scg:List>
                                          </ui:MultipleAssign.AssignOperations>
                                        </ui:MultipleAssign>
                                      </Sequence>
                                    </Switch.Default>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence x:Key="UiPath.Excel.Activities" DisplayName="Excel Case" sap:VirtualizedContainerService.HintSize="687,900" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="excelFilePath" />
                                        <Variable x:TypeArguments="x:String" Default="%[PLACEHOLDER_EXCELPATH]" Name="placeholderExcelPath" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:MultipleAssign DisplayName="Multiple Assign Excel-1" sap:VirtualizedContainerService.HintSize="645,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_9">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[ActionType]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">Excel</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[CardTag]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">ueab:ExcelApplicationCard</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="sx:XmlNode">[XmlMainFile.DocumentElement.SelectNodes("//*[@DisplayName="""+ActivityName+"""]",xmlNamespaceManagerMain)(0)]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                      </ui:MultipleAssign>
                                      <While sap2010:Annotation.AnnotationText="It's not mandatory to have a parent. The Excel activity can be outside of an Excel Card and reference the Excel file by its name." DisplayName="Get parent Excel Case" sap:VirtualizedContainerService.HintSize="645,260" sap2010:WorkflowViewState.IdRef="While_6">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <While.Condition>
                                          <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="ActivityNode IsNot Nothing AndAlso Not ActivityNode.Name.Equals(CardTag)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                                        </While.Condition>
                                        <Assign DisplayName="Assign ActivityNode from Parent node Excel" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="sx:XmlNode">[ActivityNode.ParentNode]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </While>
                                      <If Condition="[ActivityNode IsNot Nothing]" DisplayName="If Excel Card found" sap:VirtualizedContainerService.HintSize="645,308" sap2010:WorkflowViewState.IdRef="If_13">
                                        <If.Then>
                                          <ui:MultipleAssign DisplayName="Multiple Assign Excel-2" sap:VirtualizedContainerService.HintSize="338,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_10">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[excelFilePath]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">[ActivityNode.Attributes("WorkbookPath").Value]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderOutlookContainerVis,cDisplayNone).Replace(placeholderAppCardContainerVis,cDisplayNone).Replace(placeholderAppElemContainerVis,cDisplayNone)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderExcelPath,excelFilePath)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                        </If.Then>
                                        <If.Else>
                                          <Assign DisplayName="Assign ErrorTemplate Empty Details - no Card" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_108">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderExcelContainerVis,cDisplayNone).Replace(placeholderOutlookContainerVis,cDisplayNone).Replace(placeholderAppCardContainerVis,cDisplayNone).Replace(placeholderAppElemContainerVis,cDisplayNone)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                    <Sequence x:Key="UiPath.Mail.Activities" DisplayName="Outlook Case" sap:VirtualizedContainerService.HintSize="526,831" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:MultipleAssign DisplayName="Multiple Assign Outlook-1" sap:VirtualizedContainerService.HintSize="484,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[ActionType]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">Outlook</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[CardTag]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">umab:OutlookApplicationCard</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="sx:XmlNode">[XmlMainFile.DocumentElement.SelectNodes("//*[@DisplayName="""+ActivityName+"""]",xmlNamespaceManagerMain)(0)]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderExcelContainerVis,cDisplayNone).Replace(placeholderAppCardContainerVis,cDisplayNone).Replace(placeholderAppElemContainerVis,cDisplayNone)]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:MultipleAssign>
                                      <While sap2010:Annotation.AnnotationText="It's not mandatory to have a parent. The Mail activity can be outside of an Outlook Account Card and reference the Outlook Account by its name." DisplayName="Get parent Outlook case" sap:VirtualizedContainerService.HintSize="484,260" sap2010:WorkflowViewState.IdRef="While_7">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <While.Condition>[ActivityNode IsNot Nothing AndAlso Not ActivityNode.Name.Equals(CardTag)]</While.Condition>
                                        <Assign DisplayName="Assign ActivityNode from Parent node" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="sx:XmlNode">[ActivityNode.ParentNode]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </While>
                                      <If Condition="[ActivityNode IsNot Nothing]" DisplayName="If Outlook Card found" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_14">
                                        <If.Then>
                                          <Assign DisplayName="Assign OutlookAccount" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_105">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderOutlookAcc,ActivityNode.Attributes("Account").Value)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                    <Sequence x:Key="UiPath.UiAutomationX.Activities" DisplayName="ApplicationCase" sap:VirtualizedContainerService.HintSize="949,1900" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:MultipleAssign DisplayName="Multiple Assign ApplicationCase-1" sap:VirtualizedContainerService.HintSize="907,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_12">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[ActionType]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[placeholderLocTheApplication]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[CardTag]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">uix:ApplicationCard</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="sx:XmlNode">[XmlMainFile.DocumentElement.SelectNodes("//*[@DisplayName="""+ActivityName+"""]",xmlNamespaceManagerMain)(0)]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                      </ui:MultipleAssign>
                                      <Sequence DisplayName="Attach Screenshots UiX" sap:VirtualizedContainerService.HintSize="907,1608" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch DisplayName="Try Catch: Find Card Screenshot UiX" sap:VirtualizedContainerService.HintSize="865,483" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <TryCatch.Try>
                                            <Sequence DisplayName="Find Card Screenshot" sap:VirtualizedContainerService.HintSize="562,1782" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign CardNode UiX" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="sx:XmlNode">[ActivityCardNode]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <While DisplayName="Find parent UiX" sap:VirtualizedContainerService.HintSize="520,218" sap2010:WorkflowViewState.IdRef="While_8">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <While.Condition>
                                                  <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="not ActivityCardNode.Name.Equals(CardTag)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2">
                                                    <mva:VisualBasicValue.Result>
                                                      <OutArgument x:TypeArguments="x:Boolean" />
                                                    </mva:VisualBasicValue.Result>
                                                  </mva:VisualBasicValue>
                                                </While.Condition>
                                                <Assign DisplayName="Assign Activity Card Node from Parent UiX" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="sx:XmlNode">[ActivityCardNode]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="sx:XmlNode">[ActivityCardNode.ParentNode]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </While>
                                              <ui:ForEach x:TypeArguments="sx:XmlNode" CurrentIndex="{x:Null}" DisplayName="Find Target UiX" sap:VirtualizedContainerService.HintSize="520,496" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[ActivityCardNode.ChildNodes]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="sx:XmlNode">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="item" />
                                                    </ActivityAction.Argument>
                                                    <If Condition="[item.Name.Equals(&quot;uix:ApplicationCard.TargetApp&quot;)]" DisplayName="If ChildNode is AppCard UiX" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_9">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence DisplayName="Sequence: Find Target UiX" sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign DisplayName="Assign ChildNodeTarget UiX" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="sx:XmlNode">[ChildNodeTarget]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="sx:XmlNode">[item]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:Break DisplayName="Break - found item target UiX" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_3" />
                                                        </Sequence>
                                                      </If.Then>
                                                    </If>
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ForEach>
                                              <ui:ForEach x:TypeArguments="sx:XmlNode" CurrentIndex="{x:Null}" DisplayName="For Each ChildNode in TargetApp UiX" sap:VirtualizedContainerService.HintSize="520,496" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[ChildNodeTarget.ChildNodes]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="sx:XmlNode">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="item" />
                                                    </ActivityAction.Argument>
                                                    <If Condition="[item.Name.Equals(&quot;uix:TargetApp&quot;)]" DisplayName="If ChildNode is TargetApp UiX" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_10">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence DisplayName="Sequence: Find target UiX" sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign DisplayName="Assign ChildNodeTarget App UiX" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="sx:XmlNode">[ChildNodeTarget]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="sx:XmlNode">[item]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:Break DisplayName="Break - found item TargetAppUiX" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_4" />
                                                        </Sequence>
                                                      </If.Then>
                                                    </If>
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ForEach>
                                              <Assign DisplayName="Assign ScreenshotCard UiX" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ScreenshotCard]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[".screenshots/"+ChildNodeTarget.Attributes("InformativeScreenshot").Value]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign ApplicationNamePath UiX" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ApplicationName]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[If(ChildNodeTarget.Attributes("FilePath") Is Nothing, Nothing ,ChildNodeTarget.Attributes("FilePath").Value)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign ApplicationURL UiX" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ApplicationURL]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[If(ChildNodeTarget.Attributes("Url") Is Nothing, Nothing ,ChildNodeTarget.Attributes("Url").Value)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,321" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Sequence: EmptyScreenshots UiX" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign DisplayName="Assign ScreenshotCardPlaceholder empty UiX" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[ScreenshotCard]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">["data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNkYAAAAAYAAjCB0C8AAAAASUVORK5CYII="]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign DisplayName="Assign [APPLICATION_NAME_PLACEHOLDER] UiX" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[ApplicationNamePlaceholder]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[ActivityCardNode.Attributes("DisplayName").Value]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                        <If sap2010:Annotation.AnnotationText="If the activity that throw the error is one of the Card types, there are no images to show for the element." Condition="[ActivityNode.Name.Equals(&quot;uix:ApplicationCard&quot;)]" DisplayName="If Card element UiX" sap:VirtualizedContainerService.HintSize="865,993" sap2010:WorkflowViewState.IdRef="If_12">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence DisplayName="Card error / Without element UiX" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign placeholder_AppCardContainerVis UiX" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderExcelContainerVis,cDisplayNone).Replace(placeholderOutlookContainerVis,cDisplayNone).Replace(placeholderAppElemContainerVis,cDisplayNone)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign placeholder_AppName placeholder_ScreenhotAppCard UiX" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_80">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderAppName,ApplicationName).Replace(placeholderScreenshotAppCard,ScreenshotCard)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="Take element screenshots UiX" sap:VirtualizedContainerService.HintSize="516,814" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign placeholder_AppElementContainerVis UiX" sap:VirtualizedContainerService.HintSize="474,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderExcelContainerVis,cDisplayNone).Replace(placeholderOutlookContainerVis,cDisplayNone).Replace(placeholderAppCardContainerVis,cDisplayNone)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <TryCatch DisplayName="Try Catch : ScreenshotElement .png UiX" sap:VirtualizedContainerService.HintSize="474,522" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                                                <TryCatch.Try>
                                                  <Assign DisplayName="Assign Screenshot_Element UiX  png" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_83">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[ScreenshotElement]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[".screenshots/"+ActivityNode.SelectSingleNode(".//uix:TargetAnchorable",xmlNamespaceManagerMain).Attributes("InformativeScreenshot").Value]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="440,360" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <TryCatch DisplayName="Try Catch :  Screenshot_Element base64 UiX" sap:VirtualizedContainerService.HintSize="434,291" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <TryCatch.Try>
                                                          <Sequence DisplayName="Sequence: Try Screenshot_Element base64 UiX" sap:VirtualizedContainerService.HintSize="476,483" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <Assign DisplayName="Assign Screenshot_Element UiX" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_63">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[ScreenshotElement]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">["data:image/png;base64, "+ActivityNode.SelectSingleNode(".//uix:TargetAnchorable",xmlNamespaceManagerMain).Attributes("InformativeScreenshot").Value]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <TryCatch DisplayName="Try Catch : Screenshot_Anchor UiX" sap:VirtualizedContainerService.HintSize="434,291" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <TryCatch.Try>
                                                                <Sequence DisplayName="Sequence: Screenshot_Anchor UiX" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <Assign DisplayName="Assign Screenshot_Anchor UiX" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:String">[ScreenshotAnchor]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:String">[ActivityNode.SelectSingleNode(".//uix:Target",xmlNamespaceManagerMain).Attributes("ImageBase64").Value]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign DisplayName="Assign divAnchorPlaceoholder UiX" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:String">[placeholderDivAnchor]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:String">[String.Format("&lt;div class=""img-resize center-align""&gt;&lt;img onclick=""ShowModal(this);"" class=""modal-image""alt="""" src=""data:image/png;base64, {0}""/&gt;&lt;/div&gt;&lt;div class=""center-align"" id=""arrow-container"" &gt;&lt;img height=""34px;"" alt="""" src=""data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAC4AAAAiCAYAAAAge+tMAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEcSURBVFhH7ZXPSwJRFIX7//+S2kSUi1BwYSWKLURJGSoJE1OS/DGj6ZRz4j7muXDzNJ9nEO4HDwYuDN/lnTNzhhNFxdmoOBsVZ6PibGjiSZKkT36giPc+RsgVa+h0B94WoIhPZhHua084vynhulBF8NrD73qdTv8HNePjabhZ4CpfOWiBTMopCzw8tnCRuzMLtF/eEcc/6XQ3nOLLVYxo/n2UM/gco1humBu4vC2jGbwhjBZm5sIpXq0H5sXMI3Fy4RSfhnMMR5OjnP7wa5N5Kywx2oVMMi55bj13Tb73FbZQxUVYcix5lmJKQfcVtlDEt4WlN1LCQ6CIy/fal7CFIi4/GV/ClkzK6QMVZ6PibFScjYqzUXE2JyoO/AHqaxyQglTMQAAAAABJRU5ErkJggg==""/&gt;&lt;/div&gt;",ScreenshotAnchor)]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </TryCatch.Try>
                                                              <TryCatch.Catches>
                                                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,129" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                                    <ActivityAction.Argument>
                                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                    </ActivityAction.Argument>
                                                                    <Assign DisplayName="Assign Screenshot_Anchor empty UiX" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[placeholderDivAnchor]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </ActivityAction>
                                                                </Catch>
                                                              </TryCatch.Catches>
                                                            </TryCatch>
                                                          </Sequence>
                                                        </TryCatch.Try>
                                                        <TryCatch.Catches>
                                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,129" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ActivityAction x:TypeArguments="s:Exception">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                              </ActivityAction.Argument>
                                                              <Assign DisplayName="Assign Screenshot_Element empty UiX" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_64">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[ScreenshotElement]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">["iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNkYAAAAAYAAjCB0C8AAAAASUVORK5CYII="]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </ActivityAction>
                                                          </Catch>
                                                        </TryCatch.Catches>
                                                      </TryCatch>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                              <Assign DisplayName="Assign placeholder_Element UiX" sap:VirtualizedContainerService.HintSize="474,60" sap2010:WorkflowViewState.IdRef="Assign_79">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderAppName,ApplicationName).Replace(placeholderScreenshotAppCard,ScreenshotCard).Replace(placeholderAnchorScreenshot,placeholderdivAnchor).Replace(placeholderElementScreenshot,ScreenshotElement)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </Sequence>
                                    <Sequence x:Key="UiPath.UIAutomationNext.Activities" DisplayName="ApplicationCase UIAutomationNext" sap:VirtualizedContainerService.HintSize="913,3191" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:MultipleAssign DisplayName="Multiple Assign ApplicationCaseUINext-1" sap:VirtualizedContainerService.HintSize="871,160" sap2010:WorkflowViewState.IdRef="MultipleAssign_16">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_54">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[ActionType]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[placeholderLocTheApplication]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_55">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[CardTag]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">uix:NApplicationCard</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_56">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="sx:XmlNode">[XmlMainFile.DocumentElement.SelectNodes("//*[@DisplayName="""+ActivityName+"""]",xmlNamespaceManagerMain)(0)]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                      </ui:MultipleAssign>
                                      <Sequence DisplayName="Attach Screenshots UINext" sap:VirtualizedContainerService.HintSize="871,2899" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch DisplayName="Try Catch: Find Card Screenshot UINext" sap:VirtualizedContainerService.HintSize="829,2009" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <TryCatch.Try>
                                            <Sequence DisplayName="Find Card Screenshot UINext" sap:VirtualizedContainerService.HintSize="562,1782" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign CardNode" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="sx:XmlNode">[ActivityCardNode]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="sx:XmlNode">[ActivityNode]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <While DisplayName="Find parent UINext" sap:VirtualizedContainerService.HintSize="520,218" sap2010:WorkflowViewState.IdRef="While_9">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <While.Condition>
                                                  <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="not ActivityCardNode.Name.Equals(CardTag)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1">
                                                    <mva:VisualBasicValue.Result>
                                                      <OutArgument x:TypeArguments="x:Boolean" />
                                                    </mva:VisualBasicValue.Result>
                                                  </mva:VisualBasicValue>
                                                </While.Condition>
                                                <Assign DisplayName="Assign Activity Card Node from Parent UINext" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="sx:XmlNode">[ActivityCardNode]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="sx:XmlNode">[ActivityCardNode.ParentNode]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </While>
                                              <ui:ForEach x:TypeArguments="sx:XmlNode" CurrentIndex="{x:Null}" DisplayName="Find Target UINext" sap:VirtualizedContainerService.HintSize="520,496" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[ActivityCardNode.ChildNodes]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="sx:XmlNode">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="item" />
                                                    </ActivityAction.Argument>
                                                    <If Condition="[item.Name.Equals(&quot;uix:NApplicationCard.TargetApp&quot;)]" DisplayName="If Node is NApplicationCard" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_17">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence DisplayName="Sequence: Find target UINext" sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign DisplayName="Assign ChildNodeTarget UINext" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="sx:XmlNode">[ChildNodeTarget]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="sx:XmlNode">[item]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:Break DisplayName="Break: found item UINext" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_5" />
                                                        </Sequence>
                                                      </If.Then>
                                                    </If>
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ForEach>
                                              <ui:ForEach x:TypeArguments="sx:XmlNode" CurrentIndex="{x:Null}" DisplayName="For Each ChildNode in TargetApp UINext" sap:VirtualizedContainerService.HintSize="520,496" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[ChildNodeTarget.ChildNodes]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="sx:XmlNode">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="item" />
                                                    </ActivityAction.Argument>
                                                    <If Condition="[item.Name.Equals(&quot;uix:TargetApp&quot;)]" DisplayName="If: Item is uix:TargetApp UINext" sap:VirtualizedContainerService.HintSize="484,362" sap2010:WorkflowViewState.IdRef="If_18">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence DisplayName="Sequence: Find TargetApp UINext" sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign DisplayName="Assign ChildNodeTarget App UINext" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_89">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="sx:XmlNode">[ChildNodeTarget]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="sx:XmlNode">[item]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:Break DisplayName="Break: FoundItem TargetApp UINext" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_6" />
                                                        </Sequence>
                                                      </If.Then>
                                                    </If>
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ForEach>
                                              <Assign DisplayName="Assign ScreenshotCard UINext" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_90">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ScreenshotCard]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[".screenshots/"+ChildNodeTarget.Attributes("InformativeScreenshot").Value]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign ApplicationNamePath UINext" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_91">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ApplicationName]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[If(ChildNodeTarget.Attributes("FilePath") Is Nothing, Nothing ,ChildNodeTarget.Attributes("FilePath").Value)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign ApplicationURL" sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_92">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ApplicationURL]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[If(ChildNodeTarget.Attributes("Url") Is Nothing, Nothing ,ChildNodeTarget.Attributes("Url").Value)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Sequence: Screenshot Exception" sap:VirtualizedContainerService.HintSize="304,246" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign DisplayName="Assign ScreenshotCardPlaceholder empty UINext" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_93">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[ScreenshotCard]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">["data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNkYAAAAAYAAjCB0C8AAAAASUVORK5CYII="]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign DisplayName="Assign [APPLICATION_NAME_PLACEHOLDER]  UINext" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[ApplicationNamePlaceholder]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[ActivityCardNode.Attributes("DisplayName").Value]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                        <If sap2010:Annotation.AnnotationText="If the activity that throw the error is one of the Card types, there are no images to show for the element." Condition="[ActivityNode.Name.Equals(&quot;uix:ApplicationCard&quot;)]" DisplayName="If Card element UINext" sap:VirtualizedContainerService.HintSize="829,758" sap2010:WorkflowViewState.IdRef="If_19">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence DisplayName="Card error / Without element UINext" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign placeholder_AppCardContainerVis UINext" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderExcelContainerVis,cDisplayNone).Replace(placeholderOutlookContainerVis,cDisplayNone).Replace(placeholderAppElemContainerVis,cDisplayNone)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign DisplayName="Assign placeholder_AppName placeholder_ScreenhotAppCard UINext" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_96">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderAppName,ApplicationName).Replace(placeholderScreenshotAppCard,ScreenshotCard)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence DisplayName="Take element screenshots" sap:VirtualizedContainerService.HintSize="480,579" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign placeholder_AppElementContainerVis  UINext" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_97">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderExcelContainerVis,cDisplayNone).Replace(placeholderOutlookContainerVis,cDisplayNone).Replace(placeholderAppCardContainerVis,cDisplayNone)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <TryCatch DisplayName="Try Catch : ScreenshotElement .png  UINext" sap:VirtualizedContainerService.HintSize="438,287" sap2010:WorkflowViewState.IdRef="TryCatch_16">
                                                <TryCatch.Try>
                                                  <Assign DisplayName="Assign Screenshot_Element UINext" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_98">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[ScreenshotElement]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[".screenshots/"+ActivityNode.SelectSingleNode(".//uix:TargetAnchorable",xmlNamespaceManagerMain).Attributes("InformativeScreenshot").Value]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <TryCatch DisplayName="Try Catch :  Screenshot_Element base64 UINext" sap:VirtualizedContainerService.HintSize="438,51" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <TryCatch.Try>
                                                          <Sequence DisplayName="Sequence: ScreenshotElement" sap:VirtualizedContainerService.HintSize="304,245.6" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <Assign DisplayName="Assign Screenshot_Element" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_99">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[ScreenshotElement]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">["data:image/png;base64, "+ActivityNode.SelectSingleNode(".//uix:TargetAnchorable",xmlNamespaceManagerMain).Attributes("InformativeScreenshot").Value]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <TryCatch DisplayName="Try Catch : Screenshot_Anchor" sap:VirtualizedContainerService.HintSize="262.4,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <TryCatch.Try>
                                                                <Sequence DisplayName="Sequence: Try Screenshot_Anchor" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <Assign DisplayName="Assign Screenshot_Anchor" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_100">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:String">[ScreenshotAnchor]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:String">[ActivityNode.SelectSingleNode(".//uix:Target",xmlNamespaceManagerMain).Attributes("ImageBase64").Value]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign DisplayName="Assign divAnchorPlaceoholder" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_101">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:String">[placeholderDivAnchor]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:String">[String.Format("&lt;div class=""img-resize center-align""&gt;&lt;img onclick=""ShowModal(this);"" class=""modal-image""alt="""" src=""data:image/png;base64, {0}""/&gt;&lt;/div&gt;&lt;div class=""center-align"" id=""arrow-container"" &gt;&lt;img height=""34px;"" alt="""" src=""data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAC4AAAAiCAYAAAAge+tMAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEcSURBVFhH7ZXPSwJRFIX7//+S2kSUi1BwYSWKLURJGSoJE1OS/DGj6ZRz4j7muXDzNJ9nEO4HDwYuDN/lnTNzhhNFxdmoOBsVZ6PibGjiSZKkT36giPc+RsgVa+h0B94WoIhPZhHua084vynhulBF8NrD73qdTv8HNePjabhZ4CpfOWiBTMopCzw8tnCRuzMLtF/eEcc/6XQ3nOLLVYxo/n2UM/gco1humBu4vC2jGbwhjBZm5sIpXq0H5sXMI3Fy4RSfhnMMR5OjnP7wa5N5Kywx2oVMMi55bj13Tb73FbZQxUVYcix5lmJKQfcVtlDEt4WlN1LCQ6CIy/fal7CFIi4/GV/ClkzK6QMVZ6PibFScjYqzUXE2JyoO/AHqaxyQglTMQAAAAABJRU5ErkJggg==""/&gt;&lt;/div&gt;",ScreenshotAnchor)]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </TryCatch.Try>
                                                              <TryCatch.Catches>
                                                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                                    <ActivityAction.Argument>
                                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                    </ActivityAction.Argument>
                                                                    <Assign DisplayName="Assign Screenshot_Anchor empty" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_102">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[placeholderDivAnchor]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </ActivityAction>
                                                                </Catch>
                                                              </TryCatch.Catches>
                                                            </TryCatch>
                                                          </Sequence>
                                                        </TryCatch.Try>
                                                        <TryCatch.Catches>
                                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ActivityAction x:TypeArguments="s:Exception">
                                                              <ActivityAction.Argument>
                                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                              </ActivityAction.Argument>
                                                              <Assign DisplayName="Assign Screenshot_Element empty" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_103">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[ScreenshotElement]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">["iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNkYAAAAAYAAjCB0C8AAAAASUVORK5CYII="]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </ActivityAction>
                                                          </Catch>
                                                        </TryCatch.Catches>
                                                      </TryCatch>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                              <Assign DisplayName="Assign placeholder_Element UINext" sap:VirtualizedContainerService.HintSize="436.8,60" sap2010:WorkflowViewState.IdRef="Assign_104">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderAppName,ApplicationName).Replace(placeholderScreenshotAppCard,ScreenshotCard).Replace(placeholderAnchorScreenshot,placeholderDivAnchor).Replace(placeholderElementScreenshot,ScreenshotElement)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </Sequence>
                                  </Switch>
                                </Sequence>
                              </If.Else>
                            </If>
                            <ui:MultipleAssign DisplayName="Multiple Assign - Replace Text Info in Custom Input template" sap:VirtualizedContainerService.HintSize="338,222" sap2010:WorkflowViewState.IdRef="MultipleAssign_13">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_37">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderActionType, ActionType)]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_38">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderActivityName , ActivityName)]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderActivityType, ActivityType)]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_40">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(ProblemDescriptionPlaceholder, ProblemDescription)]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">[ErrorTemplate]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">[ErrorTemplate.Replace(placeholderSkipIteration, IF(FoundRepetitiveActivity, "", cDisplayNone))]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                            <ui:WriteTextFile DisplayName="Write Text File: ErrorTemplate" FileName="[CustomInputContentPath]" sap:VirtualizedContainerService.HintSize="1152,132" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[ErrorTemplate]" />
                          </Sequence>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID8">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">650,844</av:Point>
                                  <av:Size x:Key="ShapeSize">200,108</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">750,952 750,1004</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:CustomInput sap2010:Annotation.AnnotationText="Present the user a dialog with error details and ask for an action: Retry / Stop / Skip." DisplayName="Custom Input - Runtime Execution Error" Height="560" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="CustomInput_1" Result="[UserAction]" URI="[CustomInputContentPath]" Width="1000">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CustomInput>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">650,1004</av:Point>
                                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">750,1055 750,1120.1 580,1120.1</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Switch x:TypeArguments="x:String" DisplayName="Switch Custom Input Result" Expression="[UserAction.Trim]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                                    <Switch.Default>
                                      <Assign sap2010:Annotation.AnnotationText="This case is when the user dismissed the dialog without choosing an action." DisplayName="Assign Abort Default" sap:VirtualizedContainerService.HintSize="262.4,104" sap2010:WorkflowViewState.IdRef="Assign_57">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Abort]</InArgument>
                                        </Assign.Value>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Assign>
                                    </Switch.Default>
                                    <Assign x:Key="Stop" sap2010:Annotation.AnnotationText="User pressed on Stop button." DisplayName="Assign Abort" sap:VirtualizedContainerService.HintSize="262.4,91.2" sap2010:WorkflowViewState.IdRef="Assign_54">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Abort]</InArgument>
                                      </Assign.Value>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Assign>
                                    <Assign x:Key="Retry" sap2010:Annotation.AnnotationText="User pressed on Retry button." DisplayName="Assign Retry" sap:VirtualizedContainerService.HintSize="262.4,91.2" sap2010:WorkflowViewState.IdRef="Assign_55">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Retry]</InArgument>
                                      </Assign.Value>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Assign>
                                    <Assign x:Key="Skip" sap2010:Annotation.AnnotationText="User pressed on Skip button." DisplayName="Assign Ignore" sap:VirtualizedContainerService.HintSize="262.4,91.2" sap2010:WorkflowViewState.IdRef="Assign_56">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Ignore]</InArgument>
                                      </Assign.Value>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Assign>
                                    <Sequence x:Key="SkipIteration" DisplayName="Sequence: SkipIteration" sap:VirtualizedContainerService.HintSize="375.2,325.6" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:WriteTextFile DisplayName="WriteTextFile ErrorTemplate" FileName="[TemplateFilePath]" sap:VirtualizedContainerService.HintSize="333.6,134.4" sap2010:WorkflowViewState.IdRef="WriteTextFile_3" Text="[SkipIterationFlagText+ErrorTemplateBackup]" />
                                      <Assign DisplayName="Assign Action Continue" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="uico:ErrorAction">[result]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="uico:ErrorAction">[ErrorAction.Continue]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </Switch>
                                  <FlowStep.Next>
                                    <x:Reference>__ReferenceID0</x:Reference>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
  </Flowchart>
</Activity>