<Activity mc:Ignorable="sap sap2010" x:Class="TestCase" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="1072,1399" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Runtime.Serialization.Formatters.Binary</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference> 
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Root" sap:VirtualizedContainerService.HintSize="1082,1334" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="context" />
      <Variable x:TypeArguments="scg:List(x:Object)" Name="data" />
      <Variable x:TypeArguments="x:Boolean" Name="finished" />
      <Variable x:TypeArguments="s:Exception" Name="globalException" />
      <Variable x:TypeArguments="x:String" Name="tempFolderPath" />
      <Variable x:TypeArguments="x:String" Default="impact" Name="fileName" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="filesCounter" />
      <Variable x:TypeArguments="x:Int32" Name="fileMaxSize">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">100*1024-1024</mca:CSharpValue>
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Initialize Context" sap:VirtualizedContainerService.HintSize="1040,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
          <mca:CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">context</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">new Dictionary&lt;string,string&gt;() {{"machineName",Environment.MachineName},{"startTime",DateTime.UtcNow.ToString()},{"finished","False"}}</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Initialize Data" sap:VirtualizedContainerService.HintSize="1040,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:Object)">
          <mca:CSharpReference x:TypeArguments="scg:List(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">data</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:Object)">
          <mca:CSharpValue x:TypeArguments="scg:List(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">new List&lt;object&gt;()</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Func&lt;string&gt; getTempFolderGuid = () =&gt; {&#xA;   string folder=null;&#xA;&#x9;do&#xA;&#x9;{&#xA;&#x9;&#x9;folder = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString());&#xA;&#x9;}&#xA;&#x9;while(Directory.Exists(folder) || File.Exists(folder));&#xA;    &#xA;    return folder;&#xA;};&#xA; &#xA;try&#xA;{&#xA;&#x9;tempFolderOut = getTempFolderGuid();&#xA;&#x9;Directory.CreateDirectory(tempFolderOut);&#xA;}&#xA;catch{&#xA;&#x9;//try again&#xA;&#x9;tempFolderOut = getTempFolderGuid();&#xA;&#x9;Directory.CreateDirectory(tempFolderOut);&#xA;}&#xA;&#xA;&#xA; " DisplayName="Create temp folder" sap:VirtualizedContainerService.HintSize="1040,164" sap2010:WorkflowViewState.IdRef="InvokeCode_5" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <OutArgument x:TypeArguments="x:String" x:Key="tempFolderOut">
          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">tempFolderPath</mca:CSharpReference>
        </OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1040,838" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Parallel sap:VirtualizedContainerService.HintSize="1002,611" sap2010:WorkflowViewState.IdRef="Parallel_1">
          <Parallel.CompletionCondition>
            <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">finished</mca:CSharpValue>
          </Parallel.CompletionCondition>
          <ui:TriggerScope DisplayName="Trigger Scope" sap:VirtualizedContainerService.HintSize="452,565" sap2010:WorkflowViewState.IdRef="TriggerScope_1" SchedulingMode="Sequential">
            <ui:TriggerScope.Action>
              <ActivityAction x:TypeArguments="ui:EventInfoTriggerArgs">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:EventInfoTriggerArgs" Name="args" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Process received args" sap:VirtualizedContainerService.HintSize="376,256" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="var dataEntry= new Dictionary&lt;string,object&gt;();&#xA;dataEntry.Add(&quot;triggerType&quot;, args.TriggerType.Name);&#xA;dataEntry.Add(&quot;triggerName&quot;, args.TriggerName);&#xA;&#xA;if (args.EventInfo?.SapSessionAttributesInfo !=null) {&#xA;&#x9;dataEntry.Add(&quot;session&quot;, args.EventInfo.SapSessionAttributesInfo.SourceSession);&#xA;&#x9;dataEntry.Add(&quot;args&quot;, args.EventInfo.SapSessionAttributesInfo.Attributes);&#xA;}&#xA;&#xA;data.Add(dataEntry);&#xA;&#xA;var dataJson = JsonConvert.SerializeObject(data);&#xA;if(dataJson.Length&gt;=fileMaxSize){&#xA;&#x9;filesCounter++;&#xA;&#x9;var dataPath=Path.Combine(tempFolderPath,string.Format(&quot;data{0}.json&quot;,filesCounter));&#xA;&#x9;File.WriteAllText(dataPath,dataJson);&#xA;&#x9;data = new List&lt;object&gt;();&#xA;}&#xA;" DisplayName="Create new data entry" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
                    <ui:InvokeCode.Arguments>
                      <InOutArgument x:TypeArguments="scg:List(x:Object)" x:Key="data">
                        <mca:CSharpReference x:TypeArguments="scg:List(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">data</mca:CSharpReference>
                      </InOutArgument>
                      <InArgument x:TypeArguments="ui:EventInfoTriggerArgs" x:Key="args">
                        <mca:CSharpValue x:TypeArguments="ui:EventInfoTriggerArgs" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">args</mca:CSharpValue>
                      </InArgument>
                      <InOutArgument x:TypeArguments="x:Int32" x:Key="filesCounter">
                        <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">filesCounter</mca:CSharpReference>
                      </InOutArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="fileMaxSize">
                        <mca:CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">fileMaxSize</mca:CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="tempFolderPath">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">tempFolderPath</mca:CSharpValue>
                      </InArgument>
                    </ui:InvokeCode.Arguments>
                  </ui:InvokeCode>
                </Sequence>
              </ActivityAction>
            </ui:TriggerScope.Action>
            <ui:TriggerScope.Triggers>
              <scg:List x:TypeArguments="Activity" Capacity="4">
                <ui:SapSessionTrigger DisplayName="SAP Session Attributes Change Trigger" sap:VirtualizedContainerService.HintSize="416,79" sap2010:WorkflowViewState.IdRef="SapSessionTrigger_1">
                  <ui:SapSessionTrigger.Attributes>
                    <InArgument x:TypeArguments="s:String[]">
                      <mca:CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">new []{ "sapTransaction", "sapProgram" }</mca:CSharpValue>
                    </InArgument>
                  </ui:SapSessionTrigger.Attributes>
                </ui:SapSessionTrigger>
              </scg:List>
            </ui:TriggerScope.Triggers>
          </ui:TriggerScope>
          <Sequence DisplayName="Execution" sap:VirtualizedContainerService.HintSize="376,565" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Placeholder Description="This placeholder activity will be replaced at build time and can only be used within a workflow template." sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="Placeholder_1" />
            <Assign DisplayName="Set finished flag" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">finished</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Parallel>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1006,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Assign DisplayName="Set global exception" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="s:Exception">
                  <mca:CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">globalException</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:Exception">
                  <mca:CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">exception</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Send data" sap:VirtualizedContainerService.HintSize="526,987" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <Sequence.Variables>
            <Variable x:TypeArguments="scg:List(x:String)" Name="impactFiles" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="//set context&#xA;if(finished) {&#xA;&#x9;context[&quot;finished&quot;]=&quot;True&quot;;&#xA;}&#xA;context.Add(&quot;endTime&quot;,DateTime.UtcNow.ToString());&#xA;&#xA;//serialize last data file&#xA;if(filesCounter==0 || data.Count&gt;0){&#xA;&#x9;var dataJson = JsonConvert.SerializeObject(data);&#xA;&#x9;filesCounter++;&#xA;&#x9;File.WriteAllText(Path.Combine(tempFolderPath,string.Format(&quot;data{0}.json&quot;,filesCounter)),dataJson);&#xA;}&#xA;&#xA;impactFiles=new List&lt;string&gt;();&#xA;//create impact.json files&#xA;for(var counter=1;counter&lt;=filesCounter;counter++){&#xA;&#x9;var dataContent=File.ReadAllText(Path.Combine(tempFolderPath,string.Format(&quot;data{0}.json&quot;,counter)));&#xA;&#x9;var dataObject=JArray.Parse(dataContent);&#xA;&#x9;var finalResult = new Dictionary&lt;string,object&gt;();&#xA;&#x9;finalResult.Add(&quot;context&quot;,context);&#xA;&#x9;finalResult.Add(&quot;data&quot;,dataObject);&#xA;&#x9;var finalJson = JsonConvert.SerializeObject(finalResult);&#xA;&#x9;&#xA;&#x9;var impactFilePath=Path.Combine(tempFolderPath,string.Format(&quot;{0}{1}.json&quot;,fileName,counter));&#xA;&#x9;impactFiles.Add(impactFilePath);&#xA;&#x9;//create impact{counter}.json&#xA;&#x9;File.WriteAllText(impactFilePath,finalJson);&#xA;}" DisplayName="Set context and create impact files" sap:VirtualizedContainerService.HintSize="484,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
            <ui:InvokeCode.Arguments>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="context">
                <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">context</mca:CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Boolean" x:Key="finished">
                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">finished</mca:CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="scg:List(x:Object)" x:Key="data">
                <mca:CSharpValue x:TypeArguments="scg:List(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">data</mca:CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="tempFolderPath">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">tempFolderPath</mca:CSharpValue>
              </InArgument>
              <InOutArgument x:TypeArguments="x:Int32" x:Key="filesCounter">
                <mca:CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">filesCounter</mca:CSharpReference>
              </InOutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="fileName">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">fileName</mca:CSharpValue>
              </InArgument>
              <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="impactFiles">
                <mca:CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">impactFiles</mca:CSharpReference>
              </OutArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="484,295" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="impactFile" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="426,171" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uta:AttachDocument ContinueOnError="{x:Null}" DisplayName="Send the document to Orchestrator" sap:VirtualizedContainerService.HintSize="384,79" sap2010:WorkflowViewState.IdRef="AttachDocument_1">
                    <uta:AttachDocument.FilePath>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">impactFile</mca:CSharpValue>
                      </InArgument>
                    </uta:AttachDocument.FilePath>
                    <uta:AttachDocument.Tags>
                      <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                        <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">new [] {"Impact","SAP"}</mca:CSharpValue>
                      </InArgument>
                    </uta:AttachDocument.Tags>
                  </uta:AttachDocument>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <ui:ForEach.Values>
              <InArgument x:TypeArguments="sc:IEnumerable">
                <mca:CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">impactFiles</mca:CSharpValue>
              </InArgument>
            </ui:ForEach.Values>
          </ui:ForEach>
          <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete temp folder" sap:VirtualizedContainerService.HintSize="484,79" sap2010:WorkflowViewState.IdRef="Delete_1">
            <ui:Delete.Path>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">tempFolderPath</mca:CSharpValue>
              </InArgument>
            </ui:Delete.Path>
          </ui:Delete>
          <If sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">globalException!=null</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <Throw sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1">
                <InArgument x:TypeArguments="s:Exception">
                  <mca:CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">globalException</mca:CSharpValue>
                </InArgument>
              </Throw>
            </If.Then>
          </If>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>