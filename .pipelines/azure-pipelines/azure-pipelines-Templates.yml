parameters:
  - name: shouldGetTemplatesFromConfig
    displayName: shouldGetTemplatesFromConfig
    type: boolean
    default: false

trigger:
  branches:
    include:
      - develop
      - master/*
      - release/*
  paths:
    exclude:
      - .pipelines/*

variables:
  - template: ../variables/common.yml
  - name: outputDirectory
    value: "$(Pipeline.Workspace)/packagesDirectory"
  - name: shouldGetTemplatesFromConfig
    value: ${{ parameters.shouldGetTemplatesFromConfig }}

pool:
  vmImage: 'windows-latest'

jobs:
  - job: Build
    steps:
    - task: NuGetToolInstaller@1
      displayName: "Install nuget"

    - ${{if eq(variables['Build.Reason'],'PullRequest')}}:
      - task: PowerShell@2
        inputs:
          targetType: 'filePath'
          filePath: $(System.DefaultWorkingDirectory)\.pipelines\azure-pipelines\DecideTemplatesToPack.ps1
          arguments:
            -outputDirectory '${{ variables.outputDirectory }}'
            -commitHash $(Build.SourceVersion)
            -buildReason $(Build.Reason)
            -buildSourcesDirectory $(Build.SourcesDirectory)
            -systemPullRequestSourceBranch $(System.PullRequest.SourceBranch)
            -systemPullRequestTargetBranch $(System.PullRequest.TargetBranch)
            -shouldGetTemplatesFromConfig $$(shouldGetTemplatesFromConfig)
        displayName: "Pack modified templates"

    - ${{if ne(variables['Build.Reason'],'PullRequest')}}:
      - task: PowerShell@2
        inputs:
          targetType: 'filePath'
          filePath: $(System.DefaultWorkingDirectory)\.pipelines\azure-pipelines\DecideTemplatesToPack.ps1
          arguments:
            -outputDirectory '${{ variables.outputDirectory }}'
            -commitHash $(Build.SourceVersion)
            -buildReason $(Build.Reason)
            -buildSourcesDirectory $(Build.SourcesDirectory)
            -shouldGetTemplatesFromConfig $$(shouldGetTemplatesFromConfig)
        displayName: "Pack modified templates"

    - task: PublishBuildArtifacts@1
      displayName: "Upload Artifacts"
      inputs:
        PathtoPublish: '${{ variables.outputDirectory }}'
        ArtifactName: 'Packages'
