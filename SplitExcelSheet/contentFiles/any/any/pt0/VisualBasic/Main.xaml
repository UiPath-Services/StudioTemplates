<?xml version="1.0" encoding="utf-8"?>
<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1195.2,4884" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabf="clr-namespace:UiPath.Excel.Activities.Business.Filter;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Binding</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Presentations</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities.Business.Filter</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="34">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <ueab:SequenceX DisplayName="Single Excel Process Scope" sap:VirtualizedContainerService.HintSize="616,4819.2" sap2010:WorkflowViewState.IdRef="SequenceX_1">
    <ueab:SequenceX.Variables>
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;Project_Notebook.xlsx&quot;,visible:=True,autoSave:=False,createNew:=True,readOnly:=False,isWorkspace:=True)]" Name="Notes" />
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Name="ExcelInput">
        <Variable.Default>
          <VisualBasicValue x:TypeArguments="ue:IWorkbookQuickHandle" ExpressionText="new WorkbookQuickHandle(workbookPath:=&quot;InputData.xlsx&quot;,autoSave:=True,readOnly:=False,isWorkspace:=False)" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="AutomaticallyNamedTable" />
      <Variable x:TypeArguments="ue:ISheetRef" Name="Sheet_Germany" />
      <Variable x:TypeArguments="ue:ISheetRef" Name="Sheet_USA" />
    </ueab:SequenceX.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:DeleteFileX sap2010:Annotation.AnnotationText="This is a fully functional template. Click &quot;Run&quot; (or press F5) to try it.&#xA;&#xA;Delete output file if it already exists." DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="572.8,156.8" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[string.Format(&quot;{0}\CategorizedOutput.xlsx&quot;, Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments))]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:DeleteFileX>
    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" sap2010:Annotation.AnnotationText="This &quot;Use Excel File&quot; refers to an Excel workbook that does not yet exist. This means the file will be created when the automation is run.&#xA;&#xA;The Excel sheet referred to as &quot;ExcelInput&quot; in this template is referenced as a project level resource. Excel files that will always have the same name and location can be added as a resource to help keep declutter your designer. To connect to an Excel file:&#xA;- Open the &quot;Data Manager&quot; tab on the right side of this Main designer surface&#xA;- Click on the Folder icon on the toolbard&#xA;- Choose &quot;Connect to a new Excel file...&quot;" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="572.8,4532.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[string.Format(&quot;{0}\CategorizedOutput.xlsx&quot;, Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments))]">
      <ueab:ExcelApplicationCard.Body>
        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="OutputExcel" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="539.2,4067.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="The group activity allows you to organize your project. Groups can be collapsed when you aren't working with those activities to help you focus." DisplayName="Group - Process &quot;France&quot;" sap:VirtualizedContainerService.HintSize="496,1526.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:RenameSheetX sap2010:Annotation.AnnotationText="Rename the default Sheet1 to a meaningful name for the data it will contain." DisplayName="Rename Sheet to France" From="[OutputExcel.Sheet(&quot;Sheet1&quot;)]" sap:VirtualizedContainerService.HintSize="433.6,183.2" sap2010:WorkflowViewState.IdRef="RenameSheetX_1" To="France">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:RenameSheetX>
              <ueab:FilterX sap2010:Annotation.AnnotationText="Filters source sheet to the first category of data.&#xA;Click &quot;Configure Filter&quot; to set filter properties." ClearFilter="False" ColumnName="Country" DisplayName="Filter by Country&gt;&gt;France" HasHeaders="True" sap:VirtualizedContainerService.HintSize="433.6,214.4" sap2010:WorkflowViewState.IdRef="FilterX_1" Range="[ExcelInput.Sheet(&quot;Sheet1&quot;)]">
                <ueab:FilterX.FilterArgument>
                  <ueabf:FilterArgument Mode="Basic">
                    <ueabf:FilterArgument.AdvancedFiltersArgument>
                      <ueabf:AdvancedFilterArgument LogicalOperator="And">
                        <ueabf:AdvancedFilterArgument.Condition1>
                          <ueabf:AdvancedFilterCondition Operator="NONE">
                            <ueabf:AdvancedFilterCondition.Value>
                              <InArgument x:TypeArguments="x:String" />
                            </ueabf:AdvancedFilterCondition.Value>
                          </ueabf:AdvancedFilterCondition>
                        </ueabf:AdvancedFilterArgument.Condition1>
                        <ueabf:AdvancedFilterArgument.Condition2>
                          <ueabf:AdvancedFilterCondition Operator="NONE">
                            <ueabf:AdvancedFilterCondition.Value>
                              <InArgument x:TypeArguments="x:String" />
                            </ueabf:AdvancedFilterCondition.Value>
                          </ueabf:AdvancedFilterCondition>
                        </ueabf:AdvancedFilterArgument.Condition2>
                      </ueabf:AdvancedFilterArgument>
                    </ueabf:FilterArgument.AdvancedFiltersArgument>
                    <ueabf:FilterArgument.BasicFiltersArgument>
                      <ueabf:BasicFilterArgument>
                        <ueabf:BasicFilterArgument.BasicFilters>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">France</InArgument>
                          </scg:List>
                        </ueabf:BasicFilterArgument.BasicFilters>
                      </ueabf:BasicFilterArgument>
                    </ueabf:FilterArgument.BasicFiltersArgument>
                  </ueabf:FilterArgument>
                </ueab:FilterX.FilterArgument>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:FilterX>
              <ueab:CopyPasteRangeX sap2010:Annotation.AnnotationText="Copy the header row from the source sheet into the new sheet." DestinationRange="[OutputExcel.Sheet(&quot;France&quot;)]" DisplayName="Copy Paste ExcelInput Sheet1 to France" sap:VirtualizedContainerService.HintSize="433.6,244.8" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_1" PasteOptions="All" SourceRange="[ExcelInput.Sheet(&quot;Sheet1&quot;)]" Transpose="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:CopyPasteRangeX>
              <ueab:CreateTableX TableName="{x:Null}" sap2010:Annotation.AnnotationText="Format the data in the &quot;France&quot; sheet as a table. If the range does not have headers, you can change this setting using the &quot;Properties&quot; panel available in the top right of StudioX.&#xA;&#xA;If no value is provided for &quot;New table name&quot; a name will be automatically generated. You can save the automatically generated name to reference it later by using Create Variable." DisplayName="Format As Table" HasHeaders="True" sap:VirtualizedContainerService.HintSize="433.6,337.6" sap2010:WorkflowViewState.IdRef="CreateTableX_1" OutTableName="[AutomaticallyNamedTable]" Range="[OutputExcel.Sheet(&quot;France&quot;)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:CreateTableX>
              <WriteLine sap2010:Annotation.AnnotationText="This value will appear in the Output window (accessible from the tab on the bottom Left).&#xA;&#xA;Write Lines are a great way to understand what is going on in your application when you need to verify values or troubleshoot. See https://docs.uipath.com/studiox/docs/automation-best-practices#section-generate-messages-at-key-points-in-the-automation" DisplayName="Write France Table name" sap:VirtualizedContainerService.HintSize="433.6,230.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[string.Format(&quot;Inserted table was named &quot;&quot;{0}&quot;&quot;&quot;, AutomaticallyNamedTable)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </WriteLine>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="You can edit the displayed name of the &quot;Group&quot; activity to give it a descriptive name. To edit it, simply click on it it." DisplayName="Process &quot;Germany&quot;" sap:VirtualizedContainerService.HintSize="496,1223.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:InsertSheetX sap2010:Annotation.AnnotationText="Create a second sheet for a different category of data." DisplayName="Insert Sheet_USA" sap:VirtualizedContainerService.HintSize="433.6,219.2" sap2010:WorkflowViewState.IdRef="InsertSheetX_1" Name="Germany" ReferenceNewSheetAs="[Sheet_Germany]" Workbook="[OutputExcel]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:InsertSheetX>
              <ueab:FilterX ClearFilter="False" ColumnName="Country" DisplayName="Filter by Country&gt;&gt;Germany" HasHeaders="True" sap:VirtualizedContainerService.HintSize="433.6,170.4" sap2010:WorkflowViewState.IdRef="FilterX_2" Range="[ExcelInput.Sheet(&quot;Sheet1&quot;)]">
                <ueab:FilterX.FilterArgument>
                  <ueabf:FilterArgument Mode="Basic">
                    <ueabf:FilterArgument.AdvancedFiltersArgument>
                      <ueabf:AdvancedFilterArgument LogicalOperator="And">
                        <ueabf:AdvancedFilterArgument.Condition1>
                          <ueabf:AdvancedFilterCondition Operator="NONE">
                            <ueabf:AdvancedFilterCondition.Value>
                              <InArgument x:TypeArguments="x:String" />
                            </ueabf:AdvancedFilterCondition.Value>
                          </ueabf:AdvancedFilterCondition>
                        </ueabf:AdvancedFilterArgument.Condition1>
                        <ueabf:AdvancedFilterArgument.Condition2>
                          <ueabf:AdvancedFilterCondition Operator="NONE">
                            <ueabf:AdvancedFilterCondition.Value>
                              <InArgument x:TypeArguments="x:String" />
                            </ueabf:AdvancedFilterCondition.Value>
                          </ueabf:AdvancedFilterCondition>
                        </ueabf:AdvancedFilterArgument.Condition2>
                      </ueabf:AdvancedFilterArgument>
                    </ueabf:FilterArgument.AdvancedFiltersArgument>
                    <ueabf:FilterArgument.BasicFiltersArgument>
                      <ueabf:BasicFilterArgument>
                        <ueabf:BasicFilterArgument.BasicFilters>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">Germany</InArgument>
                          </scg:List>
                        </ueabf:BasicFilterArgument.BasicFilters>
                      </ueabf:BasicFilterArgument>
                    </ueabf:FilterArgument.BasicFiltersArgument>
                  </ueabf:FilterArgument>
                </ueab:FilterX.FilterArgument>
              </ueab:FilterX>
              <ueab:CopyPasteRangeX DestinationRange="[Sheet_Germany]" DisplayName="Copy Paste ExcelInput Sheet1 to Sheet_Germany" sap:VirtualizedContainerService.HintSize="433.6,213.6" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_2" PasteOptions="All" SourceRange="[ExcelInput.Sheet(&quot;Sheet1&quot;)]" Transpose="False" />
              <ueab:CreateTableX TableName="{x:Null}" DisplayName="Format the Germany Sheet As Table" HasHeaders="True" sap:VirtualizedContainerService.HintSize="433.6,213.6" sap2010:WorkflowViewState.IdRef="CreateTableX_2" OutTableName="[AutomaticallyNamedTable]" Range="[OutputExcel.Sheet(&quot;Germany&quot;)]" />
              <WriteLine DisplayName="Write Germany Table name" sap:VirtualizedContainerService.HintSize="433.6,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[string.Format(&quot;Inserted table was named &quot;&quot;{0}&quot;&quot;&quot;, AutomaticallyNamedTable)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </WriteLine>
            </Sequence>
            <Sequence DisplayName="Process &quot;USA&quot;" sap:VirtualizedContainerService.HintSize="496,1148" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:InsertSheetX DisplayName="Insert Sheet_USA" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="InsertSheetX_2" Name="USA" ReferenceNewSheetAs="[Sheet_USA]" Workbook="[OutputExcel]" />
              <ueab:FilterX ClearFilter="False" ColumnName="Country" DisplayName="Filter by Country&gt;&gt;USA" HasHeaders="True" sap:VirtualizedContainerService.HintSize="433.6,170.4" sap2010:WorkflowViewState.IdRef="FilterX_3" Range="[ExcelInput.Sheet(&quot;Sheet1&quot;)]">
                <ueab:FilterX.FilterArgument>
                  <ueabf:FilterArgument Mode="Basic">
                    <ueabf:FilterArgument.AdvancedFiltersArgument>
                      <ueabf:AdvancedFilterArgument LogicalOperator="And">
                        <ueabf:AdvancedFilterArgument.Condition1>
                          <ueabf:AdvancedFilterCondition Operator="NONE">
                            <ueabf:AdvancedFilterCondition.Value>
                              <InArgument x:TypeArguments="x:String" />
                            </ueabf:AdvancedFilterCondition.Value>
                          </ueabf:AdvancedFilterCondition>
                        </ueabf:AdvancedFilterArgument.Condition1>
                        <ueabf:AdvancedFilterArgument.Condition2>
                          <ueabf:AdvancedFilterCondition Operator="NONE">
                            <ueabf:AdvancedFilterCondition.Value>
                              <InArgument x:TypeArguments="x:String" />
                            </ueabf:AdvancedFilterCondition.Value>
                          </ueabf:AdvancedFilterCondition>
                        </ueabf:AdvancedFilterArgument.Condition2>
                      </ueabf:AdvancedFilterArgument>
                    </ueabf:FilterArgument.AdvancedFiltersArgument>
                    <ueabf:FilterArgument.BasicFiltersArgument>
                      <ueabf:BasicFilterArgument>
                        <ueabf:BasicFilterArgument.BasicFilters>
                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                            <InArgument x:TypeArguments="x:String">USA</InArgument>
                          </scg:List>
                        </ueabf:BasicFilterArgument.BasicFilters>
                      </ueabf:BasicFilterArgument>
                    </ueabf:FilterArgument.BasicFiltersArgument>
                  </ueabf:FilterArgument>
                </ueab:FilterX.FilterArgument>
              </ueab:FilterX>
              <ueab:CopyPasteRangeX DestinationRange="[Sheet_USA]" DisplayName="Copy Paste ExcelInput Sheet1 to Sheet_USA" sap:VirtualizedContainerService.HintSize="433.6,213.6" sap2010:WorkflowViewState.IdRef="CopyPasteRangeX_3" PasteOptions="All" SourceRange="[ExcelInput.Sheet(&quot;Sheet1&quot;)]" Transpose="False" />
              <ueab:CreateTableX TableName="{x:Null}" DisplayName="Format the USA Sheet As Table" HasHeaders="True" sap:VirtualizedContainerService.HintSize="433.6,213.6" sap2010:WorkflowViewState.IdRef="CreateTableX_3" OutTableName="[AutomaticallyNamedTable]" Range="[OutputExcel.Sheet(&quot;USA&quot;)]" />
              <WriteLine DisplayName="Write USA Table name" sap:VirtualizedContainerService.HintSize="433.6,90.4" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[string.Format(&quot;Inserted table was named &quot;&quot;{0}&quot;&quot;&quot;, AutomaticallyNamedTable)]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </WriteLine>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelApplicationCard.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelApplicationCard>
  </ueab:SequenceX>
</Activity>