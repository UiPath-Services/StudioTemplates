<Activity mc:Ignorable="sap sap2010" x:Class="Main_Attended" this:Main_Attended.in_UseQueue="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:p4="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="The file path of the target document that is going to be processed." Name="in_TargetFile" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Variable that checks if the Document Understanding Process is using Orchestrator Queues or not." Name="in_UseQueue" Type="InArgument(x:Boolean)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1530,1562</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="52">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence - Attended" sap:VirtualizedContainerService.HintSize="714,1497" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="config" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Used to control the number of attempts of retrying in case of a system exception." Name="maxAttempts" />
      <Variable x:TypeArguments="x:TimeSpan" sap2010:Annotation.AnnotationText="Used to control the amount of time between retries in the Retry Scope activity." Name="retryInterval" />
      <Variable x:TypeArguments="ui:QueueItem" sap2010:Annotation.AnnotationText="Stores the transaction item to be updated in the Orchestrator Queue." Name="TransactionItem" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Read the config file first; all Log &amp; Exception messages are defined there" DisplayName="ReadConfigFile" sap:VirtualizedContainerService.HintSize="672,89" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\\00_ReadConfigFile.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
        <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">
          <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_107">new string[]{"Settings", "Constants", "InvoicePostProcessing", "ReceiptPostProcessing"}</CSharpValue>
        </InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Config">
          <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">config</CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="x:Int32" x:Key="out_MaxAttempts">
          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">maxAttempts</CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="x:TimeSpan" x:Key="out_RetryInterval">
          <CSharpReference x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">retryInterval</CSharpReference>
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <If sap2010:Annotation.AnnotationText="When the process is run in attended mode with no input document and no queue, prompt the user for a document to be processed." DisplayName="If Attended Mode with No Input File Nor Queue" sap:VirtualizedContainerService.HintSize="672,119" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">!in_UseQueue &amp;&amp; String.IsNullOrWhiteSpace(in_TargetFile)</CSharpValue>
        </InArgument>
      </If.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:SelectFile DisplayName="Select Document for Processing" Filter="All files (*.*)|*.*" sap:VirtualizedContainerService.HintSize="334,147" sap2010:WorkflowViewState.IdRef="SelectFile_1">
          <ui:SelectFile.SelectedFile>
            <OutArgument x:TypeArguments="x:String">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">in_TargetFile</CSharpReference>
            </OutArgument>
          </ui:SelectFile.SelectedFile>
        </ui:SelectFile>
      </If.Then>
    </If>
    <TryCatch DisplayName="Try Catch - Process File" sap:VirtualizedContainerService.HintSize="672,1119" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Flowchart DisplayName="File Processing Flowchart" sap:VirtualizedContainerService.HintSize="634,882" sap2010:WorkflowViewState.IdRef="Flowchart_2">
          <Flowchart.Variables>
            <Variable x:TypeArguments="p3:DocumentTaxonomy" sap2010:Annotation.AnnotationText="Stores the project taxonomy against which the documents can be processed." Name="docTaxonomy" />
            <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="The text extracted from the target document." Name="docText" />
            <Variable x:TypeArguments="p2:Document" sap2010:Annotation.AnnotationText="The Document Object Model (DOM) of the target document." Name="dom" />
            <Variable x:TypeArguments="p:ClassificationResult[]" sap2010:Annotation.AnnotationText="The array of classification results given by running the chosen classifier over the target document." Name="classificationResultsArray" />
            <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Flag used for deciding if human validation is required in the classification process." Name="classificationSuccessFlag" />
          </Flowchart.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <av:Point x:Key="ShapeLocation">160,2.5</av:Point>
              <av:Size x:Key="ShapeSize">60,75</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">190,77.5 190,94.5</av:PointCollection>
              <x:Double x:Key="Height">835.7</x:Double>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Flowchart.StartNode>
            <x:Reference>__ReferenceID15</x:Reference>
          </Flowchart.StartNode>
          <FlowDecision x:Name="__ReferenceID6" DisplayName="Successful?" sap:VirtualizedContainerService.HintSize="70.22222222222223,87.11111111111111" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
            <FlowDecision.Condition>
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">classificationSuccessFlag</CSharpValue>
            </FlowDecision.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">155,606.5</av:Point>
                <av:Size x:Key="ShapeSize">70,87</av:Size>
                <av:PointCollection x:Key="TrueConnector">155,650 60,650 60,740 90,740</av:PointCollection>
                <av:PointCollection x:Key="FalseConnector">225.22222222222223,650.0555555555555 255.22222222222223,650.0555555555555 255.22222222222223,651.6666666666666 300,651.6666666666666</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">90,714.5</av:Point>
                    <av:Size x:Key="ShapeSize">200,53</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">190,767.3888888888889 190,784.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEach x:TypeArguments="p:ClassificationResult" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Process all documents within the input file" DisplayName="Process Each Document" sap:VirtualizedContainerService.HintSize="200,52.888888888888886" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="p:ClassificationResult">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="p:ClassificationResult" Name="classificationResult" />
                      </ActivityAction.Argument>
                      <TryCatch DisplayName="Try Catch - Process Each Document" sap:VirtualizedContainerService.HintSize="672,863" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                        <TryCatch.Variables>
                          <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Page range in the input file where the document is located" Name="currentPageRange">
                            <Variable.Default>
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">(classificationResult.DocumentBounds.StartPage + 1).ToString() + "-" + (classificationResult.DocumentBounds.StartPage + classificationResult.DocumentBounds.PageCount).ToString()</CSharpValue>
                            </Variable.Default>
                          </Variable>
                          <Variable x:TypeArguments="p:ExtractionResult" sap2010:Annotation.AnnotationText="The results of the data extraction process." Name="extractionResults" />
                        </TryCatch.Variables>
                        <TryCatch.Try>
                          <Flowchart DisplayName="Process Each Document - Flowchart" sap:VirtualizedContainerService.HintSize="634,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
                            <Flowchart.Variables>
                              <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Flag used for deciding if human validation is required in the extraction process." Name="extractionSuccessFlag" />
                            </Flowchart.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <av:Point x:Key="ShapeLocation">220,2.5</av:Point>
                                <av:Size x:Key="ShapeSize">60,75</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">250,77.1666666666667 250,103.666666666667</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Flowchart.StartNode>
                              <x:Reference>__ReferenceID4</x:Reference>
                            </Flowchart.StartNode>
                            <FlowDecision x:Name="__ReferenceID1" DisplayName="Successul?" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                              <FlowDecision.Condition>
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">extractionSuccessFlag</CSharpValue>
                              </FlowDecision.Condition>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <av:Point x:Key="ShapeLocation">214.8,257.3</av:Point>
                                  <av:Size x:Key="ShapeSize">70,87</av:Size>
                                  <av:PointCollection x:Key="FalseConnector">284.8,300.8 314.79999999999995,300.8 314.79999999999995,308.333333333333 400,308.333333333333</av:PointCollection>
                                  <av:PointCollection x:Key="TrueConnector">214.8,300.633333333333 120,300.633333333333 120,410 150,410</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID0">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">150,383.666666666667</av:Point>
                                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke 70_Export workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Framework\\70_Export.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="p:ExtractionResult" x:Key="in_ExtractionResults">
                                        <CSharpValue x:TypeArguments="p:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">extractionResults</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                                        <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">config</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">
                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">maxAttempts</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
                                        <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">retryInterval</CSharpValue>
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID3">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">400,275.333333333333</av:Point>
                                      <av:Size x:Key="ShapeSize">200,66</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">500,341.333333333333 500,409.166666666667 350,409.166666666667</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence sap2010:Annotation.AnnotationText="Extraction Validation &amp; Extractor training" DisplayName="Validate &amp; Train Extractors" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="p:ExtractionResult" sap2010:Annotation.AnnotationText="Human validated extraction results used for training." Name="validatedExtractionResults" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If DisplayName="If Valid Transaction Item - Set Data Validation Status" sap:VirtualizedContainerService.HintSize="483.2,302.4" sap2010:WorkflowViewState.IdRef="If_2">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">TransactionItem != null</CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SetTransactionProgress - Extraction Validation" sap:VirtualizedContainerService.HintSize="378.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReusableWorkflows\SetTransactionProgress.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Progress">[config("TransactionProgress_ExtractionValidation")]</InArgument>
                                            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[config]</InArgument>
                                            <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">[maxAttempts]</InArgument>
                                            <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">[retryInterval]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                    </If>
                                    <ui:LogMessage DisplayName="Log Message - Present Validation Station" sap:VirtualizedContainerService.HintSize="483.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1">
                                      <ui:LogMessage.Message>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21" xml:space="preserve">config["LogMessage_ShowValidationStation"] + " " + extractionResults.ResultsDocument.DocumentTypeId + " (pag " +  currentPageRange +")" + Environment.NewLine + config["logKey"]</CSharpValue>
                                        </InArgument>
                                      </ui:LogMessage.Message>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:LogMessage>
                                    <p1:PresentValidationStation sap2010:Annotation.AnnotationText="Note that, in case of user rejection, a DocumentRejectedByUserException is thrown here." DisplayName="Present Validation Station - Main" sap:VirtualizedContainerService.HintSize="483.2,416" sap2010:WorkflowViewState.IdRef="PresentValidationStation_1" ShowOnlyRelevantPageRange="True">
                                      <p1:PresentValidationStation.AutomaticExtractionResults>
                                        <InArgument x:TypeArguments="p:ExtractionResult">
                                          <CSharpValue x:TypeArguments="p:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">extractionResults</CSharpValue>
                                        </InArgument>
                                      </p1:PresentValidationStation.AutomaticExtractionResults>
                                      <p1:PresentValidationStation.DocumentObjectModel>
                                        <InArgument x:TypeArguments="p2:Document">
                                          <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">dom</CSharpValue>
                                        </InArgument>
                                      </p1:PresentValidationStation.DocumentObjectModel>
                                      <p1:PresentValidationStation.DocumentPath>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">in_TargetFile</CSharpValue>
                                        </InArgument>
                                      </p1:PresentValidationStation.DocumentPath>
                                      <p1:PresentValidationStation.DocumentText>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">docText</CSharpValue>
                                        </InArgument>
                                      </p1:PresentValidationStation.DocumentText>
                                      <p1:PresentValidationStation.Taxonomy>
                                        <InArgument x:TypeArguments="p3:DocumentTaxonomy">
                                          <CSharpValue x:TypeArguments="p3:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">docTaxonomy</CSharpValue>
                                        </InArgument>
                                      </p1:PresentValidationStation.Taxonomy>
                                      <p1:PresentValidationStation.ValidatedExtractionResults>
                                        <OutArgument x:TypeArguments="p:ExtractionResult">
                                          <CSharpReference x:TypeArguments="p:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">validatedExtractionResults</CSharpReference>
                                        </OutArgument>
                                      </p1:PresentValidationStation.ValidatedExtractionResults>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </p1:PresentValidationStation>
                                    <Assign sap2010:Annotation.AnnotationText="DocumentId coming from the Validation Station is missing the file extension" DisplayName="Assign - Workaround for missing extension" sap:VirtualizedContainerService.HintSize="483.2,104" sap2010:WorkflowViewState.IdRef="Assign_1">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">validatedExtractionResults.DocumentId</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">extractionResults.DocumentId</CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Assign>
                                    <ui:LogMessage DisplayName="Log Message - DataValidation Resume" sap:VirtualizedContainerService.HintSize="483.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2">
                                      <ui:LogMessage.Message>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_103" xml:space="preserve">String.Format(config["LogMessage_ResumeAfterDataValidation"], "", validatedExtractionResults.ResultsDocument.DocumentTypeId + " (pag " +  currentPageRange +")"+ Environment.NewLine + config["logKey"])</CSharpValue>
                                        </InArgument>
                                      </ui:LogMessage.Message>
                                    </ui:LogMessage>
                                    <If DisplayName="If - Train Extractors?" sap:VirtualizedContainerService.HintSize="483.2,302.4" sap2010:WorkflowViewState.IdRef="If_3">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">! Convert.ToBoolean(config["SkipExtractorTraining"])</CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="TrainExtractors" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\60_TrainExtractors.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_TargetDocument">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">in_TargetFile</CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="p3:DocumentTaxonomy" x:Key="in_DocTaxonomy">
                                              <CSharpValue x:TypeArguments="p3:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_84">docTaxonomy</CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="p2:Document" x:Key="in_DOM">
                                              <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">dom</CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_DocText">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">docText</CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="p:ExtractionResult" x:Key="in_ValidatedExtractionResults">
                                              <CSharpValue x:TypeArguments="p:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">validatedExtractionResults</CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                                              <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">config</CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">
                                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">maxAttempts</CSharpValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
                                              <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">retryInterval</CSharpValue>
                                            </InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:InvokeWorkflowFile>
                                      </If.Then>
                                    </If>
                                    <Assign DisplayName="Assign Extraction Result" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="p:ExtractionResult">
                                          <CSharpReference x:TypeArguments="p:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">extractionResults</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="p:ExtractionResult">
                                          <CSharpValue x:TypeArguments="p:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">validatedExtractionResults</CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                  <FlowStep.Next>
                                    <x:Reference>__ReferenceID0</x:Reference>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                            <FlowStep x:Name="__ReferenceID4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">150,103.666666666667</av:Point>
                                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">250,154.666666666667 250,173.666666666667</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Extract" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Framework\\50_Extract.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TargetDocument">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">in_TargetFile</CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="p3:DocumentTaxonomy" x:Key="in_DocTaxonomy">
                                    <CSharpValue x:TypeArguments="p3:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">docTaxonomy</CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="p2:Document" x:Key="in_DOM">
                                    <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">dom</CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_DocText">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">docText</CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="p:ClassificationResult" x:Key="in_ClassificationResult">
                                    <CSharpValue x:TypeArguments="p:ClassificationResult" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">classificationResult</CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                                    <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">config</CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">maxAttempts</CSharpValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
                                    <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">retryInterval</CSharpValue>
                                  </InArgument>
                                  <OutArgument x:TypeArguments="p:ExtractionResult" x:Key="out_ExtractionResults">
                                    <CSharpReference x:TypeArguments="p:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">extractionResults</CSharpReference>
                                  </OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeWorkflowFile>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">150,173.666666666667</av:Point>
                                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">250,224.666666666667 250,254.666666666667 249.8,254.666666666667 249.8,257.3</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Extraction Rules Check" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Framework\\55_ExtractionBusinessRuleValidation.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_TargetDocument">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">in_TargetFile</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="p3:DocumentTaxonomy" x:Key="in_DocTaxonomy">
                                        <CSharpValue x:TypeArguments="p3:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">docTaxonomy</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                                        <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">config</CSharpValue>
                                      </InArgument>
                                      <InOutArgument x:TypeArguments="p:ExtractionResult" x:Key="io_ExtractionResults">
                                        <CSharpReference x:TypeArguments="p:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">extractionResults</CSharpReference>
                                      </InOutArgument>
                                      <OutArgument x:TypeArguments="x:Boolean" x:Key="out_AutoExtractionSuccess">
                                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">extractionSuccessFlag</CSharpReference>
                                      </OutArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <FlowStep.Next>
                                    <x:Reference>__ReferenceID1</x:Reference>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                            <x:Reference>__ReferenceID2</x:Reference>
                            <x:Reference>__ReferenceID0</x:Reference>
                            <x:Reference>__ReferenceID3</x:Reference>
                          </Flowchart>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="638,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="CatchDocumentExceptionSequence" sap:VirtualizedContainerService.HintSize="388,456" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:Comment DisplayName="Comment - Do NOT Rethrow " sap:VirtualizedContainerService.HintSize="345.6,210.4" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Exceptions here are to be expected - generated by documents rejected by HitL&#xA;&#xA;Exceptions should NEVER be rethrown here!&#xA;&#xA;A rethrown exception would stop the processing flow of ALL documents within the input file and would orphan any pending Validation Actions!" />
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ERR_HandleDocumentError workflow" sap:VirtualizedContainerService.HintSize="345.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Framework\\ERR_HandleDocumentError.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_TargetFile">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">in_TargetFile</CSharpValue>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_PageRange">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">currentPageRange</CSharpValue>
                                    </InArgument>
                                    <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">
                                      <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">exception</CSharpValue>
                                    </InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">config</CSharpValue>
                                    </InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <ui:ForEach.Values>
                    <InArgument x:TypeArguments="sc:IEnumerable">
                      <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">classificationResultsArray</CSharpValue>
                    </InArgument>
                  </ui:ForEach.Values>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">90,784.5</av:Point>
                        <av:Size x:Key="ShapeSize">200,51</av:Size>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Post-export &amp;&#xA;Set Transaction Status (Success) &amp;&#xA;Process Cleanup" DisplayName="End Process" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Framework\\80_EndProcess.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">
                          <CSharpValue x:TypeArguments="ui:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">TransactionItem</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                          <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">config</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">
                          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">maxAttempts</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
                          <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">retryInterval</CSharpValue>
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">300,617</av:Point>
                    <av:Size x:Key="ShapeSize">200,70</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">400,686.3333333333334 400,740.0555555555555 290,740.0555555555555</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap2010:Annotation.AnnotationText="Classification Validation&#xA;&amp; Classifier training" DisplayName="Validate &amp; Train Classifiers" sap:VirtualizedContainerService.HintSize="200,69.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="p:ClassificationResult[]" sap2010:Annotation.AnnotationText="Human validated classification results used for training." Name="validatedClassificationResults" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If DisplayName="If Valid Transaction Item - Set Classification Validation Status" sap:VirtualizedContainerService.HintSize="483.2,302.4" sap2010:WorkflowViewState.IdRef="If_4">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">TransactionItem != null</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SetTransactionProgress - Classification Validation" sap:VirtualizedContainerService.HintSize="378.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReusableWorkflows\SetTransactionProgress.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Progress">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">config["TransactionProgress_ClassificationValidation"]</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">
                            <CSharpValue x:TypeArguments="ui:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">TransactionItem</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                            <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">config</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">maxAttempts</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
                            <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">retryInterval</CSharpValue>
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </If.Then>
                  </If>
                  <ui:LogMessage DisplayName="Log Message - Present ClassificationStation" sap:VirtualizedContainerService.HintSize="483.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3">
                    <ui:LogMessage.Message>
                      <InArgument x:TypeArguments="x:Object">
                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">config["LogMessage_ShowClassificationStation"] + Environment.NewLine + config["logKey"]</CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Message>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <p4:PresentClassificationStation sap2010:Annotation.AnnotationText="Note that, in case of user rejection, a DocumentRejectedByUserException is thrown here." DisplayName="Present Classification Station - Main" sap:VirtualizedContainerService.HintSize="483.2,416" sap2010:WorkflowViewState.IdRef="PresentClassificationStation_1">
                    <p4:PresentClassificationStation.AutomaticClassificationResults>
                      <InArgument x:TypeArguments="p:ClassificationResult[]">
                        <CSharpValue x:TypeArguments="p:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">classificationResultsArray</CSharpValue>
                      </InArgument>
                    </p4:PresentClassificationStation.AutomaticClassificationResults>
                    <p4:PresentClassificationStation.DocumentObjectModel>
                      <InArgument x:TypeArguments="p2:Document">
                        <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">dom</CSharpValue>
                      </InArgument>
                    </p4:PresentClassificationStation.DocumentObjectModel>
                    <p4:PresentClassificationStation.DocumentPath>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">in_TargetFile</CSharpValue>
                      </InArgument>
                    </p4:PresentClassificationStation.DocumentPath>
                    <p4:PresentClassificationStation.DocumentText>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">docText</CSharpValue>
                      </InArgument>
                    </p4:PresentClassificationStation.DocumentText>
                    <p4:PresentClassificationStation.Taxonomy>
                      <InArgument x:TypeArguments="p3:DocumentTaxonomy">
                        <CSharpValue x:TypeArguments="p3:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">docTaxonomy</CSharpValue>
                      </InArgument>
                    </p4:PresentClassificationStation.Taxonomy>
                    <p4:PresentClassificationStation.ValidatedClassificationResults>
                      <OutArgument x:TypeArguments="p:ClassificationResult[]">
                        <CSharpReference x:TypeArguments="p:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">validatedClassificationResults</CSharpReference>
                      </OutArgument>
                    </p4:PresentClassificationStation.ValidatedClassificationResults>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </p4:PresentClassificationStation>
                  <ui:LogMessage DisplayName="Log Message - ClassificationValidation Resume" sap:VirtualizedContainerService.HintSize="483.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4">
                    <ui:LogMessage.Message>
                      <InArgument x:TypeArguments="x:Object">
                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104" xml:space="preserve">String.Format(config["LogMessage_ResumeAfterClassificationValidation"], "",  String.Join(" | ", validatedClassificationResults.Select(cResult =&gt; cResult.DocumentTypeId)), config["logKey"])</CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Message>
                  </ui:LogMessage>
                  <If DisplayName="If - Train Classifiers?" sap:VirtualizedContainerService.HintSize="483.2,302.4" sap2010:WorkflowViewState.IdRef="If_5">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">!Convert.ToBoolean(config["SkipClassifierTraining"])</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke 40_TrainClassifiers workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Framework\\40_TrainClassifiers.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TargetDocument">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">in_TargetFile</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="p3:DocumentTaxonomy" x:Key="in_DocTaxonomy">
                            <CSharpValue x:TypeArguments="p3:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">docTaxonomy</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="p2:Document" x:Key="in_DOM">
                            <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">dom</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_DocText">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">docText</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="p:ClassificationResult[]" x:Key="in_ValidatedClassificationResults">
                            <CSharpValue x:TypeArguments="p:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">validatedClassificationResults</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                            <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">config</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">
                            <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">maxAttempts</CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
                            <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">retryInterval</CSharpValue>
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </If.Then>
                  </If>
                  <Assign DisplayName="Assign Classification Result" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="p:ClassificationResult[]">
                        <CSharpReference x:TypeArguments="p:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">classificationResultsArray</CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="p:ClassificationResult[]">
                        <CSharpValue x:TypeArguments="p:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">validatedClassificationResults</CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <FlowStep.Next>
                  <x:Reference>__ReferenceID5</x:Reference>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
          <x:Reference>__ReferenceID5</x:Reference>
          <FlowDecision x:Name="__ReferenceID9" DisplayName="Using Queue?" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
            <FlowDecision.Condition>
              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">!in_UseQueue</CSharpValue>
            </FlowDecision.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">150.5,166.5</av:Point>
                <av:Size x:Key="ShapeSize">79,87</av:Size>
                <av:PointCollection x:Key="TrueConnector">150.5,210 27.5,210 27.5,267.04 190,267.04 190,286.5</av:PointCollection>
                <x:String x:Key="TrueLabel">No</x:String>
                <x:String x:Key="FalseLabel">Yes</x:String>
                <av:PointCollection x:Key="FalseConnector">229.5,210 259.5,210 259.5,215 340,215</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <FlowDecision.True>
              <FlowDecision x:Name="__ReferenceID8" DisplayName="Data Found?" sap:VirtualizedContainerService.HintSize="72,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                <FlowDecision.Condition>
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_106">! in_TargetFile.Equals("")</CSharpValue>
                </FlowDecision.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <av:Point x:Key="ShapeLocation">154,286.5</av:Point>
                    <av:Size x:Key="ShapeSize">72,87</av:Size>
                    <av:PointCollection x:Key="TrueConnector">154,330 60,330 60,425 90,425</av:PointCollection>
                    <av:PointCollection x:Key="FalseConnector">226,330 549.5,330 549.5,810 290,810</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <FlowDecision.True>
                  <FlowStep x:Name="__ReferenceID11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">90,394.5</av:Point>
                        <av:Size x:Key="ShapeSize">200,61</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">190,455.5 190,464.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Pre-digitization &amp; digitization" DisplayName="Digitize" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\\20_Digitize.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_TargetDocument">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">in_TargetFile</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                          <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">config</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">
                          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">maxAttempts</CSharpValue>
                        </InArgument>
                        <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
                          <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">retryInterval</CSharpValue>
                        </InArgument>
                        <OutArgument x:TypeArguments="p2:Document" x:Key="out_DOM">
                          <CSharpReference x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">dom</CSharpReference>
                        </OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_DocText">
                          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">docText</CSharpReference>
                        </OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">90,464.5</av:Point>
                            <av:Size x:Key="ShapeSize">200,61</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">190,525.5 201.5,525.5 201.5,534.5</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Classify documents &amp; check if human intervention is needed" DisplayName="Classify" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\\30_Classify.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_TargetDocument">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">in_TargetFile</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="p3:DocumentTaxonomy" x:Key="in_DocTaxonomy">
                              <CSharpValue x:TypeArguments="p3:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">docTaxonomy</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="p2:Document" x:Key="in_DOM">
                              <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">dom</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_DocText">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">docText</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                              <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">config</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">maxAttempts</CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
                              <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">retryInterval</CSharpValue>
                            </InArgument>
                            <OutArgument x:TypeArguments="p:ClassificationResult[]" x:Key="out_ClassificationResults">
                              <CSharpReference x:TypeArguments="p:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">classificationResultsArray</CSharpReference>
                            </OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID13">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">90,534.5</av:Point>
                                <av:Size x:Key="ShapeSize">223,61</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">201.5,595.5 190,595.5 190,606.5</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Classification Business Rule Validation" DisplayName="Classification Rules Check" sap:VirtualizedContainerService.HintSize="223,61" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\\35_ClassificationBusinessRuleValidation.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_TargetDocument">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">in_TargetFile</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="p3:DocumentTaxonomy" x:Key="in_DocTaxonomy">
                                  <CSharpValue x:TypeArguments="p3:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">docTaxonomy</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="p:ClassificationResult[]" x:Key="in_ClassificationResults">
                                  <CSharpValue x:TypeArguments="p:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">classificationResultsArray</CSharpValue>
                                </InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                                  <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">config</CSharpValue>
                                </InArgument>
                                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_AutoClassificationSuccess">
                                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">classificationSuccessFlag</CSharpReference>
                                </OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                            <FlowStep.Next>
                              <x:Reference>__ReferenceID6</x:Reference>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.True>
                <FlowDecision.False>
                  <x:Reference>__ReferenceID7</x:Reference>
                </FlowDecision.False>
              </FlowDecision>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">340,184.5</av:Point>
                    <av:Size x:Key="ShapeSize">200,61</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">440,245.5 440,275.5 190,275.5 190,286.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get the TransactionItem" DisplayName="GetTransactionItem" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\\15_GetTransactionItem.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">config</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">
                      <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">maxAttempts</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
                      <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">retryInterval</CSharpValue>
                    </InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_TargetFile">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">in_TargetFile</CSharpReference>
                    </OutArgument>
                    <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">
                      <CSharpReference x:TypeArguments="ui:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">TransactionItem</CSharpReference>
                    </OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <FlowStep.Next>
                  <x:Reference>__ReferenceID8</x:Reference>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
          <FlowStep x:Name="__ReferenceID15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">90,94.5</av:Point>
                <av:Size x:Key="ShapeSize">200,61</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">190,155.5 190,166.5</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Loads Orchestrator assets and executes logic for process-specific &amp; Document Understanding Initialization" DisplayName="Initialize Process" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\\10_InitializeProcess.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_AssetSheet">Assets</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">maxAttempts</CSharpValue>
                </InArgument>
                <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
                  <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">retryInterval</CSharpValue>
                </InArgument>
                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_Config">
                  <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">config</CSharpReference>
                </InOutArgument>
                <OutArgument x:TypeArguments="p3:DocumentTaxonomy" x:Key="out_DocTaxonomy">
                  <CSharpReference x:TypeArguments="p3:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">docTaxonomy</CSharpReference>
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <FlowStep.Next>
              <x:Reference>__ReferenceID9</x:Reference>
            </FlowStep.Next>
          </FlowStep>
          <x:Reference>__ReferenceID10</x:Reference>
          <x:Reference>__ReferenceID11</x:Reference>
          <x:Reference>__ReferenceID12</x:Reference>
          <x:Reference>__ReferenceID13</x:Reference>
          <x:Reference>__ReferenceID7</x:Reference>
          <x:Reference>__ReferenceID14</x:Reference>
          <x:Reference>__ReferenceID8</x:Reference>
        </Flowchart>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="638,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="AbortSequence" sap:VirtualizedContainerService.HintSize="420,420" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ERR_AbortProcess workflow" sap:VirtualizedContainerService.HintSize="378,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ERR_AbortProcess.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">
                    <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">exception</CSharpValue>
                  </InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                    <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">config</CSharpValue>
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SetTransactionStatus - Failure" sap:VirtualizedContainerService.HintSize="378.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\ReusableWorkflows\SetTransactionStatus.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">
                    <CSharpValue x:TypeArguments="ui:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">TransactionItem</CSharpValue>
                  </InArgument>
                  <InArgument x:TypeArguments="s:Exception" x:Key="in_Exception">
                    <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">exception</CSharpValue>
                  </InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">
                    <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">config</CSharpValue>
                  </InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">
                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">maxAttempts</CSharpValue>
                  </InArgument>
                  <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">
                    <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">retryInterval</CSharpValue>
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Rethrow DisplayName="Rethrow Exception" sap:VirtualizedContainerService.HintSize="378.4,22.4" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>