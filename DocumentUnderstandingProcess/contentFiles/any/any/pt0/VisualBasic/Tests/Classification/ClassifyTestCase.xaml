<Activity mc:Ignorable="sap sap2010" x:Class="ClassifyTestCase" this:ClassifyTestCase.in_UseQueue="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:p1="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TargetFile" Type="InArgument(x:String)" />
    <x:Property Name="in_UseQueue" Type="InArgument(x:Boolean)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>861.6,2775.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ClassifyTestCase_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="72">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="51">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ClassifyTestCase" sap:VirtualizedContainerService.HintSize="735.2,2710.4" sap2010:WorkflowViewState.IdRef="Sequence_14">
    <Sequence.Variables>
      <Variable x:TypeArguments="p:DocumentTaxonomy" Name="docTaxonomy" />
      <Variable x:TypeArguments="p1:Document" Name="dom" />
      <Variable x:TypeArguments="x:String" Name="docText" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="config" />
      <Variable x:TypeArguments="x:Int32" Name="maxAttempts" />
      <Variable x:TypeArguments="x:TimeSpan" Name="retryInterval" />
      <Variable x:TypeArguments="p2:ClassificationResult[]" Name="classificationResultsArray" />
      <Variable x:TypeArguments="x:String" Name="domString" />
      <Variable x:TypeArguments="x:Boolean" Name="classificationSuccessFlag" />
      <Variable x:TypeArguments="x:String" Name="fileName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - ClassifyTestCase" sap:VirtualizedContainerService.HintSize="693.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;ClassifyTestCase started.&quot;]" />
    <Sequence DisplayName="... Given" sap:VirtualizedContainerService.HintSize="693.6,901.6" sap2010:WorkflowViewState.IdRef="Sequence_11">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke 00_ReadConfigFile workflow" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\00_ReadConfigFile.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Config">[config]</OutArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_MaxAttempts">[maxAttempts]</OutArgument>
          <OutArgument x:TypeArguments="x:TimeSpan" x:Key="out_RetryInterval">[retryInterval]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <Assign sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[in_TargetFile]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">Data\ExampleDocuments\MergedDocuments.pdf</InArgument>
        </Assign.Value>
      </Assign>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke 10_InitializeProcess workflow" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\10_InitializeProcess.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_AssetsSheet">Assets</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">[maxAttempts]</InArgument>
          <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">[retryInterval]</InArgument>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_Config">[config]</InOutArgument>
          <OutArgument x:TypeArguments="p:DocumentTaxonomy" x:Key="out_DocTaxonomy">[docTaxonomy]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <Assign DisplayName="Assign - file name" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_7">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(in_TargetFile)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ReadTextFile File="{x:Null}" Content="[domString]" DisplayName="Read dom json File" FileName="[Path.Combine(&quot;Tests\Cache\&quot;,&quot;DigitizeDocument_&quot;+fileName+&quot;_DOM.json&quot;)]" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_3" />
      <Assign DisplayName="Assign - deserialize dom" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="p1:Document">[dom]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="p1:Document">[Newtonsoft.Json.JsonConvert.DeserializeObject(Of Document)(domString)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ReadTextFile File="{x:Null}" Content="[docText]" DisplayName="Read doc text File" FileName="[Path.Combine(&quot;Tests\Cache\&quot;,&quot;DigitizeDocument_&quot;+fileName+&quot;_Text.txt&quot;)]" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_4" />
    </Sequence>
    <Sequence DisplayName="... When" sap:VirtualizedContainerService.HintSize="693.6,206.4" sap2010:WorkflowViewState.IdRef="Sequence_12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke 30_Classify workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Framework\30_Classify.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_TargetDocument">[in_TargetFile]</InArgument>
          <InArgument x:TypeArguments="p:DocumentTaxonomy" x:Key="in_DocTaxonomy">[docTaxonomy]</InArgument>
          <InArgument x:TypeArguments="p1:Document" x:Key="in_DOM">[dom]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_DocText">[docText]</InArgument>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[config]</InArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">[maxAttempts]</InArgument>
          <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">[retryInterval]</InArgument>
          <OutArgument x:TypeArguments="p2:ClassificationResult[]" x:Key="out_ClassificationResults">[classificationResultsArray]</OutArgument>
          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_AutoClassificationSuccess">[classificationSuccessFlag]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence DisplayName="... Then" sap:VirtualizedContainerService.HintSize="693.6,1164" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="index" />
        <Variable x:TypeArguments="x:String" Name="expectedClassificationResultString" />
        <Variable x:TypeArguments="p2:ClassificationResult" Name="expectedClassificationResult" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEach x:TypeArguments="p2:ClassificationResult" CurrentIndex="[index]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="652,1071.2" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[classificationResultsArray]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="p2:ClassificationResult">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="p2:ClassificationResult" Name="classificationResult" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="616.8,946.4" sap2010:WorkflowViewState.IdRef="Sequence_21">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="documentTypeID" />
                <Variable x:TypeArguments="x:Boolean" Name="resultDocumentTypeId" />
                <Variable x:TypeArguments="x:String" Name="expectDocTypeId" />
                <Variable x:TypeArguments="x:String" Name="resultDocTypeId" />
                <Variable x:TypeArguments="x:String" Name="resultDocBounds" />
                <Variable x:TypeArguments="x:String" Name="expectDocBounds" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReadTextFile File="{x:Null}" Content="[expectedClassificationResultString]" DisplayName="Read expected Classification result" FileName="[Path.Combine(&quot;Tests\Cache\&quot;,&quot;ClassifyDocument_&quot;+fileName+&quot;_&quot;+(index+1).ToString+&quot;.json&quot;)]" sap:VirtualizedContainerService.HintSize="575.2,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_5" />
              <Assign DisplayName="Assign - deserialize expected classification" sap:VirtualizedContainerService.HintSize="575.2,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="p2:ClassificationResult">[expectedClassificationResult]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="p2:ClassificationResult">[Newtonsoft.Json.JsonConvert.DeserializeObject(Of ClassificationResult)(expectedClassificationResultString)]</InArgument>
                </Assign.Value>
              </Assign>
              <Sequence DisplayName="Verification" sap:VirtualizedContainerService.HintSize="575.2,632.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MultipleAssign DisplayName="Multiple Assign - get DocumentTypeId" sap:VirtualizedContainerService.HintSize="533.6,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[resultDocTypeId]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[classificationResult.DocumentTypeId]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[expectDocTypeId]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[expectedClassificationResult.DocumentTypeId]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
                <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" ScreenshotsPath="{x:Null}" sap2010:Annotation.AnnotationText="Check the DocumentTypeId" ContinueOnFailure="True" DisplayName="Verify - DocumentTypeId compare" sap:VirtualizedContainerService.HintSize="533.6,93.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_1" Operator="Equality" Result="[resultDocumentTypeId]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                  <uta:VerifyExpressionWithOperator.FirstExpression>
                    <InArgument x:TypeArguments="x:String">[resultDocTypeId]</InArgument>
                  </uta:VerifyExpressionWithOperator.FirstExpression>
                  <uta:VerifyExpressionWithOperator.SecondExpression>
                    <InArgument x:TypeArguments="x:String">[expectDocTypeId]</InArgument>
                  </uta:VerifyExpressionWithOperator.SecondExpression>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uta:VerifyExpressionWithOperator>
                <ui:MultipleAssign DisplayName="Multiple Assign - get DocumentBounds" sap:VirtualizedContainerService.HintSize="533.6,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[resultDocBounds]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[Newtonsoft.Json.JsonConvert.SerializeObject(expectedClassificationResult.DocumentBounds).ToLower]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[expectDocBounds]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[Newtonsoft.Json.JsonConvert.SerializeObject(expectedClassificationResult.DocumentBounds).ToLower]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
                <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify - DocumentBounds compare" sap:VirtualizedContainerService.HintSize="533.6,62.4" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_2" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                  <uta:VerifyExpressionWithOperator.FirstExpression>
                    <InArgument x:TypeArguments="x:String">[resultDocBounds]</InArgument>
                  </uta:VerifyExpressionWithOperator.FirstExpression>
                  <uta:VerifyExpressionWithOperator.SecondExpression>
                    <InArgument x:TypeArguments="x:String">[expectDocBounds]</InArgument>
                  </uta:VerifyExpressionWithOperator.SecondExpression>
                </uta:VerifyExpressionWithOperator>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message - ClassifyTestCase" sap:VirtualizedContainerService.HintSize="693.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;ClassifyTestCase finished.&quot;]" />
  </Sequence>
</Activity>