<Activity mc:Ignorable="sap sap2010" x:Class="ExportTestCase" this:ExportTestCase.in_UseQueue="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:p1="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TargetFile" Type="InArgument(x:String)" />
    <x:Property Name="in_UseQueue" Type="InArgument(x:Boolean)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1225.3333333333333,7925.777777777777</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ExportTestCase_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="40">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="59">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="1164.888888888889,7860.888888888889" sap2010:WorkflowViewState.IdRef="Sequence_52">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1123.111111111111,7768.444444444444" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="1087.5555555555557,7690.222222222223" sap2010:WorkflowViewState.IdRef="Sequence_51">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Compare the output of the Export workflow with a presaved export result based on the default input file MergedDocuments.pdf" DisplayName="ExportTestCase" sap:VirtualizedContainerService.HintSize="1045.7777777777778,7597.777777777777" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="config" />
              <Variable x:TypeArguments="x:Int32" Name="maxAttempts" />
              <Variable x:TypeArguments="x:TimeSpan" Name="retryInterval" />
              <Variable x:TypeArguments="x:Int32" Name="index" />
              <Variable x:TypeArguments="p2:ExtractionResult" Name="extractionResults" />
              <Variable x:TypeArguments="p:DocumentTaxonomy" Name="docTaxonomy" />
              <Variable x:TypeArguments="p1:Document" Name="dom" />
              <Variable x:TypeArguments="x:String" Name="docText" />
              <Variable x:TypeArguments="p2:ClassificationResult[]" Name="classificationResultsArray" />
              <Variable x:TypeArguments="sd:DataTable" Name="exportDT" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="ExportTestCase started" sap:VirtualizedContainerService.HintSize="1004,94.66666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;ExportTestCase started.&quot;]" />
            <Sequence sap2010:Annotation.AnnotationText="Read the Config file&#xA;Give the input target file&#xA;Load the number of exported documents" DisplayName="... Given" sap:VirtualizedContainerService.HintSize="1004,931.5555555555555" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReadConfigFile" sap:VirtualizedContainerService.HintSize="431.1111111111111,113.77777777777777" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\00_ReadConfigFile.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                  <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_Config">[config]</OutArgument>
                  <OutArgument x:TypeArguments="x:Int32" x:Key="out_MaxAttempts">[maxAttempts]</OutArgument>
                  <OutArgument x:TypeArguments="x:TimeSpan" x:Key="out_RetryInterval">[retryInterval]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:MultipleAssign DisplayName="Multiple Assign - Settings" sap:VirtualizedContainerService.HintSize="431.1111111111111,162.66666666666666" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Int32">[maxAttempts]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Int32">1</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:TimeSpan">[retryInterval]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:TimeSpan">00:00:00</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[in_TargetFile]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[if(string.IsNullOrWhiteSpace(in_TargetFile), "Data\ExampleDocuments\MergedDocuments.pdf", in_TargetFile)]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
              </ui:MultipleAssign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InitializeProcess" sap:VirtualizedContainerService.HintSize="431.1111111111111,113.77777777777777" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\10_InitializeProcess.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_AssetsSheet">Assets</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">[maxAttempts]</InArgument>
                  <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">[retryInterval]</InArgument>
                  <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_Config">[config]</InOutArgument>
                  <OutArgument x:TypeArguments="p:DocumentTaxonomy" x:Key="out_DocTaxonomy">[docTaxonomy]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LoadDigitizationFromCache workflow" sap:VirtualizedContainerService.HintSize="431.1111111111111,113.77777777777777" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Tests\BatchTestingUtilities\LoadDigitizationFromCache.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_TargetFile">[in_TargetFile]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[config]</InArgument>
                  <OutArgument x:TypeArguments="p1:Document" x:Key="out_Dom">[dom]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_DocText">[docText]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LoadClassificationFromCache workflow" sap:VirtualizedContainerService.HintSize="431.1111111111111,113.77777777777777" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Tests\BatchTestingUtilities\LoadClassificationFromCache.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_TargetFile">[in_TargetFile]</InArgument>
                  <InArgument x:TypeArguments="p:DocumentTaxonomy" x:Key="in_Taxonomy">[docTaxonomy]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[config]</InArgument>
                  <InArgument x:TypeArguments="p1:Document" x:Key="in_Dom">[dom]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_DocText">[docText]</InArgument>
                  <OutArgument x:TypeArguments="p2:ClassificationResult[]" x:Key="out_ClassificationResultsArray">[classificationResultsArray]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="For each extraction result run the Export workflow" DisplayName="... When" sap:VirtualizedContainerService.HintSize="1004,3425.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEach x:TypeArguments="p2:ClassificationResult" CurrentIndex="[index]" DisplayName="For Each Classification Result" sap:VirtualizedContainerService.HintSize="962.2222222222222,3301.777777777778" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[classificationResultsArray]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="p2:ClassificationResult">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="p2:ClassificationResult" Name="classificationResult" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body - for each classification result" sap:VirtualizedContainerService.HintSize="926.6666666666666,3176" sap2010:WorkflowViewState.IdRef="Sequence_36">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="pageRange" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence sap2010:Annotation.AnnotationText="Run extraction workflow for each classification result" DisplayName="... When" sap:VirtualizedContainerService.HintSize="884.8888888888889,391.1111111111111" sap2010:WorkflowViewState.IdRef="Sequence_35">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LoadExtractionFromCache workflow" sap:VirtualizedContainerService.HintSize="378.6666666666667,113.77777777777777" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Tests\BatchTestingUtilities\LoadExtractionFromCache.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_TargetFile">[in_TargetFile]</InArgument>
                            <InArgument x:TypeArguments="p:DocumentTaxonomy" x:Key="in_Taxonomy">[docTaxonomy]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[config]</InArgument>
                            <InArgument x:TypeArguments="p1:Document" x:Key="in_Dom">[dom]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_DocText">[docText]</InArgument>
                            <InArgument x:TypeArguments="p2:ClassificationResult[]" x:Key="in_ClassificationResultsArray">[classificationResultsArray]</InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_ExtractionResultsIndex">[index]</InArgument>
                            <OutArgument x:TypeArguments="p2:ExtractionResult" x:Key="out_ExtractionResults">[extractionResults]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Export" sap:VirtualizedContainerService.HintSize="378.6666666666667,113.77777777777777" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Framework\70_Export.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="p2:ExtractionResult" x:Key="in_ExtractionResults">[extractionResults]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_Config">[config]</InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxAttempts">[maxAttempts]</InArgument>
                            <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_RetryInterval">[retryInterval]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                      <Assign DisplayName="Assign - PageRange" sap:VirtualizedContainerService.HintSize="884.8888888888889,60.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_27">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[pageRange]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[(classificationResult.DocumentBounds.StartPage + 1).ToString + "-" + (classificationResult.DocumentBounds.StartPage + classificationResult.DocumentBounds.PageCount).ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Sequence sap2010:Annotation.AnnotationText="Compare the output of the export with a saved export results" DisplayName="... Then" sap:VirtualizedContainerService.HintSize="884.8888888888889,2552" sap2010:WorkflowViewState.IdRef="Sequence_37">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:List(x:String)" Name="cachedExportSheets" />
                          <Variable x:TypeArguments="scg:List(x:String)" Name="exportSheets" />
                          <Variable x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" Name="exportResultsDict" />
                          <Variable x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" Name="cachedExportDict" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Load Cached Export in a Dictionary(string,datatable)" sap:VirtualizedContainerService.HintSize="843.1111111111111,22.22222222222222" sap2010:WorkflowViewState.IdRef="Sequence_40">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Expected export scope" sap:VirtualizedContainerService.HintSize="433.77777777777777,224" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[Path.Combine(&quot;Tests\Cache\&quot;, &quot;ExportMergedDocuments_&quot; + pageRange + &quot;.xlsx&quot;)]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do - check expected results content" sap:VirtualizedContainerService.HintSize="241.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelGetWorkbookSheets DisplayName="Get Sheets of the expected results" sap:VirtualizedContainerService.HintSize="200,22.22222222222222" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_3" Sheets="[cachedExportSheets]" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                          </ui:ExcelApplicationScope>
                          <Assign DisplayName="Assign - new dictionary expected results" sap:VirtualizedContainerService.HintSize="433.77777777777777,60.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_25">
                            <Assign.To>
                              <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[cachedExportDict]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[new Dictionary(of string,DataTable)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each sheet in expected results" sap:VirtualizedContainerService.HintSize="433.77777777777777,406.22222222222223" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[cachedExportSheets]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body - For Each sheet in expected results" sap:VirtualizedContainerService.HintSize="375.55555555555554,280.44444444444446" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[exportDT]" DisplayName="Read expected export results" sap:VirtualizedContainerService.HintSize="333.77777777777777,87.55555555555556" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="[sheet]" WorkbookPath="[Path.Combine(&quot;Tests\Cache\&quot;, &quot;ExportMergedDocuments_&quot; + pageRange + &quot;.xlsx&quot;)]" />
                                  <Assign DisplayName="Assign - Add Cached Sheet to Dictionary" sap:VirtualizedContainerService.HintSize="333.77777777777777,60.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_26">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sd:DataTable">[cachedExportDict(sheet)]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sd:DataTable">[exportDT]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                        </Sequence>
                        <Sequence DisplayName="Load Resulted Export in a Dictionary(string,datatable)" sap:VirtualizedContainerService.HintSize="843.1111111111111,22.22222222222222" sap2010:WorkflowViewState.IdRef="Sequence_43">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Export result scope" sap:VirtualizedContainerService.HintSize="433.77777777777777,224" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[Path.Combine(&quot;Data\Exports\&quot;, Path.GetFileName(in_TargetFile) + &quot;_&quot; + pageRange + &quot;.xlsx&quot;)]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do - check export result content" sap:VirtualizedContainerService.HintSize="241.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelGetWorkbookSheets DisplayName="Get Sheets of the export results" sap:VirtualizedContainerService.HintSize="200,22.22222222222222" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_4" Sheets="[exportSheets]" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                          </ui:ExcelApplicationScope>
                          <Assign DisplayName="Assign - new dictionary for the export results" sap:VirtualizedContainerService.HintSize="433.77777777777777,60.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_28">
                            <Assign.To>
                              <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[exportResultsDict]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[new Dictionary(of string,DataTable)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each sheet in export results" sap:VirtualizedContainerService.HintSize="433.77777777777777,406.22222222222223" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[exportSheets]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body - For Each sheet in export results" sap:VirtualizedContainerService.HintSize="375.55555555555554,280.44444444444446" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[exportDT]" DisplayName="Read export results" sap:VirtualizedContainerService.HintSize="333.77777777777777,87.55555555555556" sap2010:WorkflowViewState.IdRef="ReadRange_4" SheetName="[sheet]" WorkbookPath="[Path.Combine(&quot;Data\Exports\&quot;, Path.GetFileName(in_TargetFile) + &quot;_&quot; + pageRange + &quot;.xlsx&quot;)]" />
                                  <Assign DisplayName="Assign - Add Results Sheet to Dictionary" sap:VirtualizedContainerService.HintSize="333.77777777777777,60.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_29">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sd:DataTable">[exportResultsDict(sheet)]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sd:DataTable">[exportDT]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                        </Sequence>
                        <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression - Check Sheet Count Equality" Expression="[cachedExportSheets.Count = exportSheets.Count]" sap:VirtualizedContainerService.HintSize="843.1111111111111,63.111111111111114" sap2010:WorkflowViewState.IdRef="VerifyExpression_4" OutputMessageFormat="[&quot;Exported number of sheets = &quot; + exportSheets.Count.ToString + &quot; vs cached number of sheeets = &quot; + cachedExportSheets.Count.ToString]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="843.1111111111111,2200.8888888888887" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[cachedExportSheets]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body - For Each Sheet" sap:VirtualizedContainerService.HintSize="807.5555555555555,2075.1111111111113" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:MultipleAssign DisplayName="Multiple Assign - number of colums and rows in expected result" sap:VirtualizedContainerService.HintSize="765.7777777777778,131.55555555555554" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:Int32">[expectResultColCnt]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:Int32">[exportExpectDict(sheet).ColumnCount]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:Int32">[expectResultRowCnt]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:Int32">[exportExpectDict(sheet).RowCount]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                </ui:MultipleAssign>
                                <TryCatch DisplayName="Try Catch - Process each sheet" sap:VirtualizedContainerService.HintSize="765.7777777777778,1811.111111111111" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch.Try>
                                    <Sequence DisplayName="Sequence - Process each sheet" sap:VirtualizedContainerService.HintSize="728.4444444444445,1577.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:MultipleAssign DisplayName="Multiple Assign - number of colums and rows in export result" sap:VirtualizedContainerService.HintSize="686.6666666666666,131.55555555555554" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:Int32">[exportResultColCnt]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:Int32">[exportResultsDict(sheet).ColumnCount]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:Int32">[exportResultRowCnt]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:Int32">[exportResultsDict(sheet).RowCount]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                      </ui:MultipleAssign>
                                      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify - number of columns compare" sap:VirtualizedContainerService.HintSize="686.6666666666666,63.111111111111114" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_6" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                                        <uta:VerifyExpressionWithOperator.FirstExpression>
                                          <InArgument x:TypeArguments="x:Int32">[exportResultColCnt]</InArgument>
                                        </uta:VerifyExpressionWithOperator.FirstExpression>
                                        <uta:VerifyExpressionWithOperator.SecondExpression>
                                          <InArgument x:TypeArguments="x:Int32">[expectResultColCnt]</InArgument>
                                        </uta:VerifyExpressionWithOperator.SecondExpression>
                                      </uta:VerifyExpressionWithOperator>
                                      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify - number of rows compare" sap:VirtualizedContainerService.HintSize="686.6666666666666,63.111111111111114" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_7" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                                        <uta:VerifyExpressionWithOperator.FirstExpression>
                                          <InArgument x:TypeArguments="x:Int32">[exportResultRowCnt]</InArgument>
                                        </uta:VerifyExpressionWithOperator.FirstExpression>
                                        <uta:VerifyExpressionWithOperator.SecondExpression>
                                          <InArgument x:TypeArguments="x:Int32">[expectResultRowCnt]</InArgument>
                                        </uta:VerifyExpressionWithOperator.SecondExpression>
                                      </uta:VerifyExpressionWithOperator>
                                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[indexDataTable]" DataTable="[exportExpectDict(sheet)]" DisplayName="For Each Row in Data Table of the current sheet" sap:VirtualizedContainerService.HintSize="686.6666666666666,719.5555555555555" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body - of for each row in Data Table of the current sheet" sap:VirtualizedContainerService.HintSize="652.8888888888889,602.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If Condition="[not CurrentRow.ItemArray.SequenceEqual(exportResultsDict(sheet).Rows(indexDataTable).ItemArray)]" DisplayName="If - rows are not equal" sap:VirtualizedContainerService.HintSize="611.1111111111111,409.77777777777777" sap2010:WorkflowViewState.IdRef="If_3">
                                                <If.Then>
                                                  <Sequence DisplayName="Sequence - row contents are not equal" sap:VirtualizedContainerService.HintSize="575.5555555555555,217.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Row contents are not equal" Expression="False" sap:VirtualizedContainerService.HintSize="533.7777777777778,63.111111111111114" sap2010:WorkflowViewState.IdRef="VerifyExpression_5" OutputMessageFormat="[&quot;Rows from sheet &quot;+sheet+&quot; are not equal between the extected Export and the Export result&quot;]" Result="[rowIsEqual]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
                                                    <ui:Break DisplayName="Stop row compare" sap:VirtualizedContainerService.HintSize="533.7777777777778,22.22222222222222" sap2010:WorkflowViewState.IdRef="Break_2" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_45">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                              <Assign DisplayName="Assign - rows are equal" sap:VirtualizedContainerService.HintSize="611.1111111111111,60.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_30">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[rowIsEqual]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEachRow>
                                      <If Condition="[rowIsEqual]" DisplayName="If - all row in the sheet were equal" sap:VirtualizedContainerService.HintSize="686.6666666666666,347.55555555555554" sap2010:WorkflowViewState.IdRef="If_4">
                                        <If.Then>
                                          <Sequence DisplayName="Sequence - all rows are equal" sap:VirtualizedContainerService.HintSize="575.5555555555555,155.55555555555554" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="All rows are equal" Expression="True" sap:VirtualizedContainerService.HintSize="533.7777777777778,63.111111111111114" sap2010:WorkflowViewState.IdRef="VerifyExpression_6" OutputMessageFormat="[&quot;Rows from sheet &quot;+sheet+&quot; are equal between the extected Export and the Export result&quot;]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_48">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="732,22.666666666666668" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Excel sheet counlt not be found" Expression="False" sap:VirtualizedContainerService.HintSize="533.7777777777778,63.111111111111114" sap2010:WorkflowViewState.IdRef="VerifyExpression_7" OutputMessageFormat="[&quot;Sheet &quot;+sheet+&quot; could not be found in the export result&quot;]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Compare the output of the export with a saved export results" DisplayName="... Then" sap:VirtualizedContainerService.HintSize="1004,2768" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <Sequence.Variables>
                <Variable x:TypeArguments="scg:List(x:String)" Name="exportExpectSheets" />
                <Variable x:TypeArguments="scg:List(x:String)" Name="exportSheets" />
                <Variable x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" Name="exportResultsDict" />
                <Variable x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" Name="exportExpectDict" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InterruptibleWhile Condition="[index&lt;numberOfDocuments]" CurrentIndex="[index]" DisplayName="Iterate over the extraction results" sap:VirtualizedContainerService.HintSize="920.4444444444445,2644.4444444444443" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
                <ui:InterruptibleWhile.Body>
                  <Sequence DisplayName="Body - Iterate over each extraction result" sap:VirtualizedContainerService.HintSize="884.8888888888889,2476.4444444444443" sap2010:WorkflowViewState.IdRef="Sequence_26">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Expected Export saved in a dictionary(string,datatable)" sap:VirtualizedContainerService.HintSize="843.1111111111111,22.22222222222222" sap2010:WorkflowViewState.IdRef="Sequence_27">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Expected export scope" sap:VirtualizedContainerService.HintSize="433.77777777777777,224" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="[Path.Combine(&quot;Tests\Cache\&quot;,&quot;Export&quot;+fileName+&quot;_&quot;+(index+1).ToString+&quot;-&quot;+(index+1).ToString+&quot;.xlsx&quot;)]">
                        <ui:ExcelApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do - check expected results content" sap:VirtualizedContainerService.HintSize="241.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_25">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelGetWorkbookSheets DisplayName="Get Sheets of the expected results" sap:VirtualizedContainerService.HintSize="200,22.22222222222222" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[exportExpectSheets]" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ExcelApplicationScope.Body>
                      </ui:ExcelApplicationScope>
                      <Assign DisplayName="Assign - new dictionary expected results" sap:VirtualizedContainerService.HintSize="433.77777777777777,60.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_20">
                        <Assign.To>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[exportExpectDict]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[new Dictionary(of string,DataTable)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each sheet in expected results" sap:VirtualizedContainerService.HintSize="433.77777777777777,405.3333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[exportExpectSheets]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body - For Each sheet in expected results" sap:VirtualizedContainerService.HintSize="375.55555555555554,280.44444444444446" sap2010:WorkflowViewState.IdRef="Sequence_24">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_expectedExportResults]" DisplayName="Read expected export results" sap:VirtualizedContainerService.HintSize="333.77777777777777,87.55555555555556" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[sheet]" WorkbookPath="[Path.Combine(&quot;Tests\Cache\&quot;,&quot;Export&quot;+fileName+&quot;_&quot;+(index+1).ToString+&quot;-&quot;+(index+1).ToString+&quot;.xlsx&quot;)]" />
                              <Assign DisplayName="Assign - add each sheet to the expected results dictionary" sap:VirtualizedContainerService.HintSize="333.77777777777777,60.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_21">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sd:DataTable">[exportExpectDict(sheet)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sd:DataTable">[dt_expectedExportResults]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEach>
                    </Sequence>
                    <Sequence DisplayName="Result Export saved in a dictionary(string,datatable)" sap:VirtualizedContainerService.HintSize="843.1111111111111,22.22222222222222" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Export result scope" sap:VirtualizedContainerService.HintSize="433.77777777777777,224" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[Path.Combine(&quot;Data\Exports\&quot;,fileName+&quot;.pdf&quot;+&quot;_&quot;+(index+1).ToString+&quot;-&quot;+(index+1).ToString+&quot;.xlsx&quot;)]">
                        <ui:ExcelApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do - check export result content" sap:VirtualizedContainerService.HintSize="241.77777777777777,114.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_23">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelGetWorkbookSheets DisplayName="Get Sheets of the export results" sap:VirtualizedContainerService.HintSize="200,22.22222222222222" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_2" Sheets="[exportSheets]" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ExcelApplicationScope.Body>
                      </ui:ExcelApplicationScope>
                      <Assign DisplayName="Assign - new dictionary for the export results" sap:VirtualizedContainerService.HintSize="433.77777777777777,60.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_22">
                        <Assign.To>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[exportResultsDict]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[new Dictionary(of string,DataTable)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each sheet in export results" sap:VirtualizedContainerService.HintSize="433.77777777777777,405.3333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[exportSheets]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body - For Each sheet in export results" sap:VirtualizedContainerService.HintSize="375.55555555555554,280.44444444444446" sap2010:WorkflowViewState.IdRef="Sequence_29">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_exportResults]" DisplayName="Read export results" sap:VirtualizedContainerService.HintSize="333.77777777777777,87.55555555555556" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="[sheet]" WorkbookPath="[Path.Combine(&quot;Data\Exports\&quot;,fileName+&quot;.pdf&quot;+&quot;_&quot;+(index+1).ToString+&quot;-&quot;+(index+1).ToString+&quot;.xlsx&quot;)]" />
                              <Assign DisplayName="Assign - add each sheet to the export results dictionary" sap:VirtualizedContainerService.HintSize="333.77777777777777,60.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_23">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sd:DataTable">[exportResultsDict(sheet)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sd:DataTable">[dt_exportResults]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                    </Sequence>
                    <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify - nr of sheets" sap:VirtualizedContainerService.HintSize="843.1111111111111,22.22222222222222" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_5" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                      <uta:VerifyExpressionWithOperator.FirstExpression>
                        <InArgument x:TypeArguments="x:Int32">[exportExpectSheets.Count]</InArgument>
                      </uta:VerifyExpressionWithOperator.FirstExpression>
                      <uta:VerifyExpressionWithOperator.SecondExpression>
                        <InArgument x:TypeArguments="x:Int32">[exportSheets.Count]</InArgument>
                      </uta:VerifyExpressionWithOperator.SecondExpression>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </uta:VerifyExpressionWithOperator>
                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each sheet in the config" sap:VirtualizedContainerService.HintSize="843.1111111111111,2197.3333333333335" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[exportExpectSheets]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body - for each sheet in config" sap:VirtualizedContainerService.HintSize="807.5555555555555,2072.4444444444443" sap2010:WorkflowViewState.IdRef="Sequence_30">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MultipleAssign DisplayName="Multiple Assign - number of colums and rows in expected result" sap:VirtualizedContainerService.HintSize="765.7777777777778,131.55555555555554" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:Int32">[expectResultColCnt]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:Int32">[exportExpectDict(sheet).ColumnCount]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:Int32">[expectResultRowCnt]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:Int32">[exportExpectDict(sheet).RowCount]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                            <TryCatch DisplayName="Try Catch - Process each sheet" sap:VirtualizedContainerService.HintSize="765.7777777777778,1808.4444444444443" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch.Try>
                                <Sequence DisplayName="Sequence - Process each sheet" sap:VirtualizedContainerService.HintSize="728.4444444444445,1574.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MultipleAssign DisplayName="Multiple Assign - number of colums and rows in export result" sap:VirtualizedContainerService.HintSize="686.6666666666666,131.55555555555554" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Int32">[exportResultColCnt]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:Int32">[exportResultsDict(sheet).ColumnCount]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Int32">[exportResultRowCnt]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:Int32">[exportResultsDict(sheet).RowCount]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                  <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify - number of columns compare" sap:VirtualizedContainerService.HintSize="686.6666666666666,63.111111111111114" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_1" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                                    <uta:VerifyExpressionWithOperator.FirstExpression>
                                      <InArgument x:TypeArguments="x:Int32">[exportResultColCnt]</InArgument>
                                    </uta:VerifyExpressionWithOperator.FirstExpression>
                                    <uta:VerifyExpressionWithOperator.SecondExpression>
                                      <InArgument x:TypeArguments="x:Int32">[expectResultColCnt]</InArgument>
                                    </uta:VerifyExpressionWithOperator.SecondExpression>
                                  </uta:VerifyExpressionWithOperator>
                                  <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify - number of rows compare" sap:VirtualizedContainerService.HintSize="686.6666666666666,63.111111111111114" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_2" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
                                    <uta:VerifyExpressionWithOperator.FirstExpression>
                                      <InArgument x:TypeArguments="x:Int32">[exportResultRowCnt]</InArgument>
                                    </uta:VerifyExpressionWithOperator.FirstExpression>
                                    <uta:VerifyExpressionWithOperator.SecondExpression>
                                      <InArgument x:TypeArguments="x:Int32">[expectResultRowCnt]</InArgument>
                                    </uta:VerifyExpressionWithOperator.SecondExpression>
                                  </uta:VerifyExpressionWithOperator>
                                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[indexDataTable]" DataTable="[exportExpectDict(sheet)]" DisplayName="For Each Row in Data Table of the current sheet" sap:VirtualizedContainerService.HintSize="686.6666666666666,717.7777777777778" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                    <ui:ForEachRow.Body>
                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body - of for each row in Data Table of the current sheet" sap:VirtualizedContainerService.HintSize="652.8888888888889,601.7777777777778" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[not CurrentRow.ItemArray.SequenceEqual(exportResultsDict(sheet).Rows(indexDataTable).ItemArray)]" DisplayName="If - rows are not equal" sap:VirtualizedContainerService.HintSize="611.1111111111111,408.8888888888889" sap2010:WorkflowViewState.IdRef="If_1">
                                            <If.Then>
                                              <Sequence DisplayName="Sequence - row contents are not equal" sap:VirtualizedContainerService.HintSize="575.5555555555555,217.77777777777777" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Row contents are not equal" Expression="False" sap:VirtualizedContainerService.HintSize="533.7777777777778,63.111111111111114" sap2010:WorkflowViewState.IdRef="VerifyExpression_2" OutputMessageFormat="[&quot;Rows from sheet &quot;+sheet+&quot; are not equal between the extected Export and the Export result&quot;]" Result="[rowIsEqual]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
                                                <ui:Break DisplayName="Stop row compare" sap:VirtualizedContainerService.HintSize="533.7777777777778,22.22222222222222" sap2010:WorkflowViewState.IdRef="Break_1" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_32">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <Assign DisplayName="Assign - rows are equal" sap:VirtualizedContainerService.HintSize="611.1111111111111,60.44444444444444" sap2010:WorkflowViewState.IdRef="Assign_24">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[rowIsEqual]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEachRow.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEachRow>
                                  <If Condition="[rowIsEqual]" DisplayName="If - all row in the sheet were equal" sap:VirtualizedContainerService.HintSize="686.6666666666666,346.6666666666667" sap2010:WorkflowViewState.IdRef="If_2">
                                    <If.Then>
                                      <Sequence DisplayName="Sequence - all rows are equal" sap:VirtualizedContainerService.HintSize="575.5555555555555,155.55555555555554" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="All rows are equal" Expression="True" sap:VirtualizedContainerService.HintSize="533.7777777777778,63.111111111111114" sap2010:WorkflowViewState.IdRef="VerifyExpression_3" OutputMessageFormat="[&quot;Rows from sheet &quot;+sheet+&quot; are equal between the extected Export and the Export result&quot;]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_34">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="732,22.666666666666668" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Excel sheet counlt not be found" Expression="False" sap:VirtualizedContainerService.HintSize="533.7777777777778,63.111111111111114" sap2010:WorkflowViewState.IdRef="VerifyExpression_1" OutputMessageFormat="[&quot;Sheet &quot;+sheet+&quot; could not be found in the export result&quot;]" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                  </Sequence>
                </ui:InterruptibleWhile.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InterruptibleWhile>
            </Sequence>
            <ui:LogMessage DisplayName="ExportTestCase ended" sap:VirtualizedContainerService.HintSize="1004,94.66666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;ExportTestCase finished.&quot;]" />
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
  </Sequence>
</Activity>