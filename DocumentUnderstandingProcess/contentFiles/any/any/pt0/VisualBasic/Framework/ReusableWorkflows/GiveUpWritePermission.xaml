<Activity mc:Ignorable="sap sap2010" x:Class="GiveUpWritePermission" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="The queue item used in the synchronization process." Name="in_AccessToken" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="The name of the queue which acts as a synchronization mechanism." Name="in_AccessQueue" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="The path to the folder where the queue is found in Orchestrator." Name="in_AccessQueueFolderPath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1112,1268</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GiveUpWritePermission_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This approach uses a Queue with a single queue item as a semaphore mechanism.&#xA;&#xA;This workflow never ends, unless the AccessToken is recreated. An external timeout is recommended when Invoking it.&#xA;&#xA;Prerequisite: Have an &quot;AccessQueue&quot; with a SINGLE queue item that does NOT allow automatic retries." DisplayName="GiveUpWritePermission" sap:VirtualizedContainerService.HintSize="418.6666666666667,1203.111111111111" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment DisplayName="Comment - GiveUpWritePermission" sap:VirtualizedContainerService.HintSize="376,163.55555555555554" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Note: when multiple robots are running DU jobs, synchronization mechanism it is mandatory to ensure that only a single robot can update the learning file at a time. This XAML uses a Queue with a single queue item as a semaphore mechanism." />
    <ui:LogMessage DisplayName="Log Message - GiveUpWritePermission" sap:VirtualizedContainerService.HintSize="376,104.44444444444444" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[in_Config(&quot;LogMessage_GiveUpWritePermission&quot;) +Environment.NewLine + in_Config(&quot;logKey&quot;)]" />
    <ui:SetTransactionStatus ServiceBaseAddress="{x:Null}" sap2010:Annotation.AnnotationText="ContinueOnError = True" ContinueOnError="True" DisplayName="Set Transaction Status - Success On FileWrite" ErrorType="Application" FolderPath="[in_AccessQueueFolderPath]" sap:VirtualizedContainerService.HintSize="376,268.44444444444446" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Status="Successful" TransactionItem="[in_AccessToken]">
      <ui:SetTransactionStatus.Analytics>
        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
      </ui:SetTransactionStatus.Analytics>
      <ui:SetTransactionStatus.Details>
        <InArgument x:TypeArguments="x:String" />
      </ui:SetTransactionStatus.Details>
      <ui:SetTransactionStatus.Output>
        <scg:Dictionary x:TypeArguments="x:String, InArgument" />
      </ui:SetTransactionStatus.Output>
      <ui:SetTransactionStatus.Reason>
        <InArgument x:TypeArguments="x:String" />
      </ui:SetTransactionStatus.Reason>
      <ui:SetTransactionStatus.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:SetTransactionStatus.TimeoutMS>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:SetTransactionStatus>
    <ui:RetryScope DisplayName="Retry Scope - Add a New Queue Item" sap:VirtualizedContainerService.HintSize="376,456" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="99999" RetryInterval="00:00:01">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <ui:AddQueueItem ServiceBaseAddress="{x:Null}" sap2010:Annotation.AnnotationText="Create a new &quot;AccessToken&quot;" DisplayName="Add Empty Queue Item" FolderPath="[in_AccessQueueFolderPath]" sap:VirtualizedContainerService.HintSize="334.22222222222223,268.8888888888889" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="[in_AccessQueue]">
            <ui:AddQueueItem.ItemInformation>
              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
            </ui:AddQueueItem.ItemInformation>
            <ui:AddQueueItem.Reference>
              <InArgument x:TypeArguments="x:String" />
            </ui:AddQueueItem.Reference>
            <ui:AddQueueItem.TimeoutMS>
              <InArgument x:TypeArguments="x:Int32" />
            </ui:AddQueueItem.TimeoutMS>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddQueueItem>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
    </ui:RetryScope>
  </Sequence>
</Activity>