<Activity mc:Ignorable="sap sap2010" x:Class="CheckCommonOcrMistakes" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property sap2010:Annotation.AnnotationText="The name of the logo field to be corrected as present in taxonomy." Name="in_LogoFieldName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="The results of the data extraction process." Name="io_ExtractionResults" Type="InOutArgument(p:ExtractionResult)" />
    <x:Property sap2010:Annotation.AnnotationText="The results of the data extraction process." Name="io_ValidatedExtractionResults" Type="InOutArgument(p:ExtractionResult)" />
  </x:Members>
  <this:CheckCommonOcrMistakes.in_LogoFieldName>
    <InArgument x:TypeArguments="x:String" />
  </this:CheckCommonOcrMistakes.in_LogoFieldName>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1762,9310.666666666666</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CheckCommonOcrMistakes_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="68">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Because we try to extract the bank/utility issuer name from the logo, there are some common ocr mistakes encountered which we try to automatically correct here using a mapping updated by the robot based on what humans correct in action center.&#xA;&#xA;This flow will be called both before hitl &amp; after." DisplayName="CheckCommonOcrMistakes" sap:VirtualizedContainerService.HintSize="649.3333333333334,9246" sap2010:WorkflowViewState.IdRef="Sequence_8">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="commonOcrMistakesDT" />
      <Variable x:TypeArguments="x:String" Name="valueBeforeHitL" />
      <Variable x:TypeArguments="x:String" Name="valueAfterHitL" />
      <Variable x:TypeArguments="x:String" Name="correctedValue" />
      <Variable x:TypeArguments="x:String" Name="CommonOcrMistakesMapping" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="607.3333333333334,151.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_3" Message="[in_Config(&quot;LogMessage_LogoOcrAutoCorrectionStart&quot;) + Environment.NewLine + in_Config(&quot;logKey&quot;)]" />
    <ucas:ReadStorageText TimeoutMS="{x:Null}" DisplayName="Read Storage Text - Common Ocr Mistakes" sap:VirtualizedContainerService.HintSize="607.3333333333334,238.66666666666666" sap2010:WorkflowViewState.IdRef="ReadStorageText_1" Path="CommonOcrMistakes.txt" Result="[CommonOcrMistakesMapping]" StorageBucketName="OCR Common Mistakes" />
    <TryCatch DisplayName="Try Catch - Deserialize DT" sap:VirtualizedContainerService.HintSize="607.3333333333334,836.6666666666666" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Assign DisplayName="Assign - deserialize commonOcrMistakesDT" sap:VirtualizedContainerService.HintSize="262,72" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataTable">[commonOcrMistakesDT]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataTable">[Newtonsoft.Json.JsonConvert.DeserializeObject(Of DataTable)(CommonOcrMistakesMapping)]</InArgument>
          </Assign.Value>
        </Assign>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="406,654.6666666666666" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:Annotation.AnnotationText="We don't want to fail the job altogether just because common ocr mistakes could not be corrected but we should be notified when the asset is invalid so we raise an alert." DisplayName="Deserialize DT failed" sap:VirtualizedContainerService.HintSize="400,584" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:RaiseAlert TimeoutMS="{x:Null}" DisplayName="Raise Alert - failed to deserialize commonOcrMistakesDT" sap:VirtualizedContainerService.HintSize="358,355.3333333333333" sap2010:WorkflowViewState.IdRef="RaiseAlert_1" Notification="[&quot;Failed to deserialize commonOcrMistakesDT from asset - &quot; + exception.Message]" Severity="Error" />
              <Throw DisplayName="Throw - failed to deserialize DT" Exception="[New Exception(&quot;Failed to deserialize commonOcrMistakesDT from asset - &quot; + exception.Message)]" sap:VirtualizedContainerService.HintSize="358,98.66666666666667" sap2010:WorkflowViewState.IdRef="Throw_3" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <If sap2010:Annotation.AnnotationText="If the flow is called before human in the loop, validated extraction results is going to be null and we will only use the normal extraction results." Condition="[io_ValidatedExtractionResults is Nothing]" DisplayName="If - before human in the loop" sap:VirtualizedContainerService.HintSize="607.3333333333334,476.6666666666667" sap2010:WorkflowViewState.IdRef="If_9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap2010:Annotation.AnnotationText="" sap:VirtualizedContainerService.HintSize="400,162" sap2010:WorkflowViewState.IdRef="Sequence_32">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign - io_ValidatedExtractionResults" sap:VirtualizedContainerService.HintSize="358,72" sap2010:WorkflowViewState.IdRef="Assign_23">
            <Assign.To>
              <OutArgument x:TypeArguments="p:ExtractionResult">[io_ValidatedExtractionResults]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="p:ExtractionResult">[io_ExtractionResults]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="400,82.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_33">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <If sap2010:Annotation.AnnotationText="Can't correct ocr mistakes if field is missing" Condition="[io_ValidatedExtractionResults.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(in_LogoFieldName)).First().IsMissing]" DisplayName="If - field is missing" sap:VirtualizedContainerService.HintSize="607.3333333333334,400" sap2010:WorkflowViewState.IdRef="If_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Throw DisplayName="Throw - field is missing" Exception="[new BusinessRuleException(in_LogoFieldName + &quot; field is missing - can not auto correct ocr mistakes&quot;)]" sap:VirtualizedContainerService.HintSize="334,98.66666666666667" sap2010:WorkflowViewState.IdRef="Throw_4" />
      </If.Then>
    </If>
    <ui:MultipleAssign sap2010:Annotation.AnnotationText="Even if field is not missing now, it might have been missing before hitl -&gt; need to check for value before hitl" DisplayName="Multiple Assign - field values before &amp; after hitl" sap:VirtualizedContainerService.HintSize="607.3333333333334,185.33333333333334" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[valueBeforeHitL]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[if(io_ExtractionResults.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(in_LogoFieldName)).First().IsMissing, "", io_ExtractionResults.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(in_LogoFieldName)).First().Values(0).Value)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[valueAfterHitL]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[io_ValidatedExtractionResults.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(in_LogoFieldName)).First().Values(0).Value]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <If sap2010:Annotation.AnnotationText="There are some generic values that can be read as ocr mistakes that can not be mapped to a single correct value so we will blacklist them manually (E.g. 'Bank Of' is an incomplete ocr reading that may be any bank)" Condition="[commonOcrMistakesDT.Select(&quot;[OcrValue] = '&quot;+valueAfterHitL.Replace(&quot;'&quot;,&quot;''&quot;)+&quot;'&quot;).Any(Function(row) CBool(row(&quot;Black Listed&quot;)).Equals(True))]" DisplayName="If - value is blacklisted" sap:VirtualizedContainerService.HintSize="607.3333333333334,711.3333333333334" sap2010:WorkflowViewState.IdRef="If_7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Value is blacklisted" sap:VirtualizedContainerService.HintSize="400,380" sap2010:WorkflowViewState.IdRef="Sequence_29">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="358,151.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_15" Message="[&quot;Value '&quot;+valueAfterHitL+&quot;' is blacklisted -&gt; will not auto correct&quot;]" />
          <Throw DisplayName="Throw - Blacklisted" Exception="[new BusinessRuleException(&quot;OCR Value is blacklisted - will not auto correct&quot;)]" sap:VirtualizedContainerService.HintSize="358,98.66666666666667" sap2010:WorkflowViewState.IdRef="Throw_5" />
        </Sequence>
      </If.Then>
    </If>
    <If sap2010:Annotation.AnnotationText="We try to correct the the ocr value read from the document regardless if the document will go to hitl or not, even after returning from hitl as well.&#xD;&#xA;We need only check value after hitl against the DT since valueAfterHitL = valueBeforeHitL always when this flow is called before sending to hitl" Condition="[commonOcrMistakesDT.Select(&quot;[OcrValue] = '&quot;+valueAfterHitL.Replace(&quot;'&quot;,&quot;''&quot;)+&quot;'&quot;).Count&gt;0]" DisplayName="If - value found in mistakesDT" sap:VirtualizedContainerService.HintSize="607.3333333333334,1744.6666666666667" sap2010:WorkflowViewState.IdRef="If_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Value found in mistakesDT" sap:VirtualizedContainerService.HintSize="524.6666666666666,1255.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_15">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataRow" Name="row" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="482.6666666666667,151.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="{x:Null}" Message="[in_LogoFieldName+&quot; '&quot;+valueAfterHitL+&quot;' was found in the mistakes DT&quot;]" />
          <Assign sap2010:Annotation.AnnotationText="Get matching row from mistakesDT" DisplayName="Assign - row" sap:VirtualizedContainerService.HintSize="482.6666666666667,102.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataRow">[row]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataRow">[commonOcrMistakesDT.Select("[OcrValue] = '"+valueAfterHitL.Replace("'","''")+"'").First]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <If sap2010:Annotation.AnnotationText="If we have seen this ocr mistake at least 3 times, we will correct the value with what we have in the DT and increment number of repetitions, otherwise do nothing" Condition="[Cint(row(&quot;Number of Repetitions&quot;)) &gt; 2]" DisplayName="If - number of repetitions &gt; 2" sap:VirtualizedContainerService.HintSize="482.6666666666667,831.3333333333334" sap2010:WorkflowViewState.IdRef="If_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Number of repetitions &gt; 2" sap:VirtualizedContainerService.HintSize="400,465.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign - increment repetition counter" sap:VirtualizedContainerService.HintSize="358,72" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row("Number of Repetitions")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[CInt(row("Number of Repetitions")) + 1]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign - correctedValue" sap:VirtualizedContainerService.HintSize="358,72" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[correctedValue]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[row("Corrected Value").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="358,151.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="{x:Null}" Message="[&quot;Changing &quot; + in_LogoFieldName + &quot; from &quot; + valueAfterHitL + &quot; to &quot; + correctedValue]" />
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,151.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="{x:Null}" Message="[&quot;Minimum repetition number not met -&gt; will not update value&quot;]" />
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Value not found in mistakesDT" sap:VirtualizedContainerService.HintSize="400,241.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="358,151.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="{x:Null}" Message="[in_LogoFieldName+&quot; '&quot;+valueAfterHitL+&quot;' was not found in the mistakes DT&quot;]" />
        </Sequence>
      </If.Else>
    </If>
    <If sap2010:Annotation.AnnotationText="If logo field was changed in hitl and the new value is not found in the mistakes DT (with the required number of repetitions met) we need to update our mapping.&#xD;&#xA;A human might use a value that is marked as a mistake when validating the document, we do not want to add those to the DT, creating cycles in the corrections." Condition="[not String.IsNullOrEmpty(correctedValue) AndAlso not String.isNullOrEmpty(valueBeforeHitL) AndAlso not valueAfterHitL.Equals(valueBeforeHitL)]" DisplayName="If - check before &amp; after hitl" sap:VirtualizedContainerService.HintSize="607.3333333333334,2886.6666666666665" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Value changed in HitL" sap:VirtualizedContainerService.HintSize="493.3333333333333,2397.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="451.3333333333333,151.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_8" Message="[in_LogoFieldName+&quot; value was changed in HitL -&gt; updating mapping&quot;]" />
          <ui:IfElseIf sap2010:Annotation.AnnotationText="When updating the mapping we search for valueBeforeHitL as the mistake and valueAfterHitL as the corrected.&#xA;&#xA;If already present we check if correction done by rep is the same as before, if it is not, we will raise an alert (only one corrected value can be valid -&gt; we need to check mapping as reps are not always consistent), else we just increment repetition.&#xA;&#xA;If not present in our mapping we add it with repetition set to 1." DisplayName="Else If - value already present in mistakesDT" sap:VirtualizedContainerService.HintSize="451.3333333333333,2116" sap2010:WorkflowViewState.IdRef="IfElseIf_3">
            <ui:IfElseIf.ConditionBlocks>
              <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                <ui:IfElseIfBlock BlockType="If" Condition="[commonOcrMistakesDT.Select(&quot;[OcrValue] = '&quot;+valueBeforeHitL.Replace(&quot;'&quot;,&quot;''&quot;)+&quot;'&quot;).Count.Equals(0)]">
                  <ui:IfElseIfBlock.Then>
                    <Sequence DisplayName="Add new entry to mapping" sap:VirtualizedContainerService.HintSize="400,481.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="358,151.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_11" Message="[&quot;Adding new row to mistakesDT&quot;]" />
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[New Object() {valueBeforeHitL, valueAfterHitL, 1, False}]" DataTable="[commonOcrMistakesDT]" DisplayName="Add Data Row - mistakesDT" sap:VirtualizedContainerService.HintSize="358,200" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                    </Sequence>
                  </ui:IfElseIfBlock.Then>
                </ui:IfElseIfBlock>
                <ui:IfElseIfBlock BlockType="ElseIf" Condition="[commonOcrMistakesDT.Select(&quot;[OcrValue] = '&quot;+valueBeforeHitL.Replace(&quot;'&quot;,&quot;''&quot;)+&quot;' and [Corrected Value] = '&quot; +valueAfterHitL.Replace(&quot;'&quot;,&quot;''&quot;)+&quot;'&quot;).Count&gt;0]">
                  <ui:IfElseIfBlock.Then>
                    <Sequence DisplayName="Increment repetition" sap:VirtualizedContainerService.HintSize="400,465.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataRow" Name="row" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign - row" sap:VirtualizedContainerService.HintSize="358,72" sap2010:WorkflowViewState.IdRef="Assign_12">
                        <Assign.To>
                          <OutArgument x:TypeArguments="sd:DataRow">[row]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="sd:DataRow">[commonOcrMistakesDT.Select("[OcrValue] = '"+valueBeforeHitL.Replace("'","''")+"' and [Corrected Value] = '" +valueAfterHitL.Replace("'","''")+"'").First]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign - increment repetition counter" sap:VirtualizedContainerService.HintSize="358,72" sap2010:WorkflowViewState.IdRef="Assign_13">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[row("Number of Repetitions")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[CInt(row("Number of Repetitions")) + 1]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="358,151.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_12" Message="[&quot;Incremented repetition number: &quot;+row(&quot;Number of Repetitions&quot;).ToString]" />
                    </Sequence>
                  </ui:IfElseIfBlock.Then>
                </ui:IfElseIfBlock>
                <ui:IfElseIfBlock BlockType="Else">
                  <ui:IfElseIfBlock.Then>
                    <Sequence sap2010:Annotation.AnnotationText="Raising an alert regarding the 2 different values added by reps" DisplayName="Corrected value missmatch" sap:VirtualizedContainerService.HintSize="400,631.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataRow" Name="row" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign - row" sap:VirtualizedContainerService.HintSize="358,72" sap2010:WorkflowViewState.IdRef="Assign_14">
                        <Assign.To>
                          <OutArgument x:TypeArguments="sd:DataRow">[row]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="sd:DataRow">[commonOcrMistakesDT.Select("[OcrValue] = '"+valueBeforeHitL.Replace("'","''")+"'").First]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="358,151.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_14" Message="[&quot;While trying to check for common ocr mistakes, a discrepancy between the already existing corrected value: '&quot;+row(&quot;Corrected Value&quot;).ToString+&quot;' and the newly inserted value: '&quot;+valueAfterHitL+&quot;' was found. Manual review of the mapping may be necessary.&quot;]" />
                      <ui:RaiseAlert TimeoutMS="{x:Null}" DisplayName="Raise Alert - different corrected values" sap:VirtualizedContainerService.HintSize="358,238" sap2010:WorkflowViewState.IdRef="RaiseAlert_2" Notification="[&quot;While trying to check for common ocr mistakes, a conflict between the already existing corrected value: '&quot;+row(&quot;Corrected Value&quot;).ToString+&quot;' and the newly inserted value: '&quot;+valueAfterHitL+&quot;' was found for this key: '&quot;+valueBeforeHitL+&quot;'. Manual review of the mapping may be necessary.&quot;]" Severity="Error" />
                    </Sequence>
                  </ui:IfElseIfBlock.Then>
                </ui:IfElseIfBlock>
              </sc:BindingList>
            </ui:IfElseIf.ConditionBlocks>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:IfElseIf>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Value not changed in HitL" sap:VirtualizedContainerService.HintSize="400,241.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="358,151.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_9" Message="[in_LogoFieldName+&quot; value was not changed in HitL&quot;]" />
        </Sequence>
      </If.Else>
    </If>
    <If sap2010:Annotation.AnnotationText="If correctedValue is populated, we need to update the extraction results object." Condition="[Not String.IsNullOrEmpty(correctedValue)]" DisplayName="If -  corrected value is not empty" sap:VirtualizedContainerService.HintSize="607.3333333333334,642" sap2010:WorkflowViewState.IdRef="If_8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="473.3333333333333,342" sap2010:WorkflowViewState.IdRef="Sequence_30">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign - extraction result value" sap:VirtualizedContainerService.HintSize="431.3333333333333,72" sap2010:WorkflowViewState.IdRef="Assign_22">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[io_ValidatedExtractionResults.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(in_LogoFieldName)).First().Values(0).Value]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[correctedValue]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:MultipleAssign DisplayName="Multiple Assign - extraction result confidence" sap:VirtualizedContainerService.HintSize="431.3333333333333,140" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Single">[io_ValidatedExtractionResults.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(in_LogoFieldName)).First().Values(0).OcrConfidence]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Single">1</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Single">[io_ValidatedExtractionResults.ResultsDocument.Fields.Where(Function(field) field.FieldName.Equals(in_LogoFieldName)).First().Values(0).Confidence]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Single">1</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="400,82.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_31">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ucas:WriteStorageText TimeoutMS="{x:Null}" DisplayName="Write Storage Text - Common Ocr Mistakes" sap:VirtualizedContainerService.HintSize="607.3333333333334,291.3333333333333" sap2010:WorkflowViewState.IdRef="WriteStorageText_1" Path="CommonOcrMistakes.txt" StorageBucketName="OCR Common Mistakes" Text="[Newtonsoft.Json.JsonConvert.SerializeObject(commonOcrMistakesDT)]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="607.3333333333334,151.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[in_Config(&quot;LogMessage_LogoOcrAutoCorrectionFinished&quot;)]" />
  </Sequence>
</Activity>